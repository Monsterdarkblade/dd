{
    "actions": {
        "absorb": {
            "category": "construction",
            "class_name": "AbsorbAction",
            "description": [
                "Absorb a block as a brush into your brush inventory"
            ],
            "examples": [
                "absorb"
            ],
            "importance": 0,
            "name": "Absorb",
            "parameters": {
                "wildcard": ""
            },
            "short_class": "Absorb"
        },
        "add_spell": {
            "category": "player",
            "class_name": "AddSpellAction",
            "description": [
                "Add a spell to a player or wand"
            ],
            "examples": [
                "addspell"
            ],
            "importance": 0,
            "name": "Add Spell",
            "parameters": {
                "add_to": "",
                "auto_upgrade": "",
                "path": "A progression path that a wand will follow\\nWhen enchanting or using the spellshop, a path will determine what spells are available to a player\\nPaths may upgrade to other paths in a progression, when a player learns all of the spells available on their current path they will progress to the next.",
                "path_end": "",
                "path_exact": "",
                "permission": "",
                "spell": "The spell to cast"
            },
            "short_class": "AddSpell"
        },
        "aggro": {
            "category": "entity",
            "class_name": "AggroAction",
            "description": [
                "Force a mob to focus on the caster"
            ],
            "examples": [
                "curse"
            ],
            "importance": 0,
            "name": "Aggro",
            "parameters": {
                "clear_target": "",
                "set_pathfinder": "",
                "speed_modifier": ""
            },
            "short_class": "Aggro"
        },
        "air_supply": {
            "category": "entity",
            "class_name": "AirSupplyAction",
            "description": [
                "Increase an entity's air supply"
            ],
            "examples": [
                "gasp"
            ],
            "importance": 0,
            "name": "Air Supply",
            "parameters": {
                "air": ""
            },
            "short_class": "AirSupply"
        },
        "all_entities": {
            "category": "compound",
            "class_name": "AllEntitiesAction",
            "description": [
                "Target all entities in the current world, or optionally in all worlds"
            ],
            "examples": [
                "count",
                "debugger",
                "nobabies"
            ],
            "importance": 0,
            "name": "All Entities",
            "parameters": {
                "sort": "",
                "target_all_worlds": ""
            },
            "short_class": "AllEntities"
        },
        "animate": {
            "category": "compound",
            "class_name": "AnimateAction",
            "description": [
                "Experimental incomplete action, do not use."
            ],
            "examples": [],
            "importance": 0,
            "name": "Animate",
            "parameters": [],
            "short_class": "Animate"
        },
        "apply_cooldown": {
            "category": "player",
            "class_name": "ApplyCooldownAction",
            "description": [
                "Apply or clear cooldowns on one or more of a player's spells"
            ],
            "examples": [
                "cure",
                "silence"
            ],
            "importance": 0,
            "name": "Apply Cooldown",
            "parameters": {
                "bypass_reduction": "Don't take cooldown reduction into affect when applying cooldowns",
                "clear": "",
                "duration": "How long an effect or spell should last, in milliseconds",
                "exclude_spells": "",
                "reduce": "Reduce the cooldown by some amount of milliseconds",
                "spells": "",
                "tags": "",
                "target_caster": ""
            },
            "short_class": "ApplyCooldown"
        },
        "area_of_effect": {
            "category": "compound",
            "class_name": "AreaOfEffectAction",
            "description": [
                "Target all entities within a radius"
            ],
            "examples": [
                "blessing",
                "grab",
                "holylight"
            ],
            "importance": 100,
            "name": "Area Of Effect",
            "parameters": {
                "ignore_modified": "",
                "min_radius": "",
                "radius": "The radius of this sphere or circle, in blocks",
                "sort": "",
                "target_count": "",
                "target_source": "",
                "y_radius": "Specify a different radius that only effects the y location\\nCan be used to adjust targeting to avoid entities that are not in the same plane as the caster"
            },
            "short_class": "AreaOfEffect"
        },
        "area_of_effect_cloud": {
            "category": "entity",
            "class_name": "AreaOfEffectCloudAction",
            "description": [
                "Create an area of effect cloud entity. Shortcut for the SpawnEntity action."
            ],
            "examples": [
                "arrow_poison"
            ],
            "importance": 0,
            "name": "Area Of Effect Cloud",
            "parameters": {
                "aggro": "This will enable the thread table aggro behavior on an otherwise normal mob\\nThis makes the mob target the player that has done the most damage to to it, within track_range\\nMobs that cast spells or have other mage properties such as protection will automatically use aggro behavior.",
                "ai": "Whether or not this mob has 'AI'. A mob with AI turned off will not move or react, and also can not be pushed by velocity.",
                "allow_replacement": "",
                "amount": "The amount of an item",
                "aware": "",
                "baby": "Make this mob a baby mob",
                "base_potion_type": "",
                "boots": "",
                "boss_bar": "",
                "brain": "Vanilla AI behaviors",
                "can_pickup_items": "Whether or not the mob will be allowed to pick up items",
                "cancel_explosion": "",
                "cancel_interact": "",
                "cast": "A probability table of spells to cast\\nThis parameter is deprecated, it is better to use the triggers map",
                "cast_requires_item": "An item the mob must be holding in order to cast spells",
                "cast_requires_target": "If true, the mob will only cast spells if it has targeted an entity",
                "chestplate": "",
                "collidable": "",
                "color": "Can be used to color particles and firework effects",
                "combustible": "",
                "default_drops": "Whether this mob should drop default vanilla drops on death",
                "dialog": "A list of speech lines for an NPC to say to nearby players",
                "dialog_face_player": "If set, the NPC will face the player they speak to\\nFacing is not smooth, direction will only change each time they speak\\nIF there are multiple players being spoken to, the NPC will try to look roughly in the center of them",
                "dialog_interval": "How long to wait before speaking each line of dialog",
                "dialog_range": "How close a player must be before the NPC will start speaking to them",
                "direction": "The direction to search",
                "disguise": "A disguise to use\\nrequires the LibsDisguises plugin",
                "disguise_target": "What player to use when disguising\\nThis will copy the target player's skin",
                "docile": "Make this mob avoid targeting other mobs",
                "drop_xp": "Amount of experience a mob should drop on death",
                "drops": "",
                "drops_require_player_killer": "",
                "duration": "How long an effect or spell should last, in milliseconds",
                "duration_on_use": "",
                "dy_offset": "",
                "entity_attributes": "Vanilla entity attributes to apply to the mob",
                "entity_parameters": "",
                "entity_types": "",
                "equip_on_respawn": "",
                "face_player": "",
                "force": "For upgrade items, this will force all properties in the upgrade template to apply to the target wand, even if they are a downgrade",
                "goals": "A list of pathfinder goals for this mob",
                "gravity": "Whether or not this entity is affected by gravity",
                "item": "The item this mob is holding in its main hand",
                "health": "Amount of health to heal",
                "helmet": "",
                "hidden": "This spell or wand template will not show up in lists\\nThis is generally used for templates not meant for player use",
                "interact_command_source": "",
                "interact_commands": "",
                "interact_costs": "",
                "interact_permission": "",
                "interact_requires_owner": "",
                "interact_spell": "A spell to cast when a player interacts with (right-clicks on) this mob",
                "interact_spell_parameters": "",
                "interact_spell_source": "",
                "interact_spell_target": "",
                "interval_requires_target": "The mob's interval triggers will not fire unless it has a target",
                "invisible": "",
                "invulnerable": "This wand will not take damage from any source, and can not be destroyed",
                "leash_range": "",
                "leggings": "",
                "lifetime": "The time, in milliseconds, that the entity\/projectile lasts for",
                "loot": "",
                "mage": "Specify properties to get applied to the Mage for this mob\\nThese can be the same sort of properties you would apply to a player class or wand",
                "max_health": "The maximum health this mob or player should have",
                "attributes": "Attributes to apply to mob\\nThese are Magic attributes as defined in attributes.yml. For vanilla entity attributes, use entity_attributes",
                "cast_interval": "How often, in milliseconds, to cast a spell.\\nThis parameter is deprecated, use 'interval' and triggers instead",
                "interval": "How often to cast spells tied to the interval trigger",
                "model": "",
                "modifiers": "",
                "mount": "",
                "mythic_mob": "",
                "mythic_mob_level": "",
                "name": "The display name of this wand or spell to show in-game\\nCan be added directly on the wand or spell config, but it is often better to put all language in the messages.yml file so it can be easily edited and translated.",
                "npc": "",
                "offhand": "",
                "on_block": "",
                "ownable": "",
                "owned": "",
                "owner": "",
                "parameterize_name": "",
                "particle": "The type of particle to use in this effect",
                "permissions": "",
                "persist": "",
                "potion_effects": "A map of potion effects to apply to this entity",
                "prevent_dismount": "",
                "prevent_melee": "",
                "prevent_projectiles": "",
                "prevent_teleport": "",
                "protected": "If set, the holder of this wand will be completly invincible and untargetable by all spells\\nMagic.wand.use.protected permission to use",
                "protection": "Protection from specific damage types",
                "radius": "The radius of this sphere or circle, in blocks",
                "radius_on_use": "",
                "radius_per_tick": "",
                "reapplication_delay": "",
                "reason": "",
                "register_by_name": "",
                "relentless": "",
                "remove_mounts": "",
                "remove_when_far_away": "",
                "repeat_random": "",
                "set_source": "",
                "set_target": "Whether to set the entity or block as the target when spawned",
                "show_name": "Whether to show the entity's name",
                "silent": "The silent flag of the mob, to prevent it from making any sounds",
                "sitting": "",
                "spawn": "Actions performed immediately after spawning the entity or projectile",
                "speed": "",
                "static": "",
                "stay": "",
                "strength": "Gives damage bonuses to specific damage types",
                "tags": "",
                "tamed": "Set to true to make this mob tamed",
                "targeting": "",
                "temporary": "",
                "track_radius": "How far away a player must get before this mob no longer chases it",
                "transformable": "",
                "triggers": "A map of triggers that will cause this mob to cast spells",
                "type": "The type of entity to spawn",
                "use_npc_name": "",
                "use_wand_name": "",
                "wait_for_death": "",
                "wait_time": "",
                "weakness": "Weakness to specific damage types",
                "xp": "Amount of experience contained in an experiene orb entity"
            },
            "short_class": "AreaOfEffectCloud"
        },
        "armor_stand_projectile": {
            "category": "compound",
            "class_name": "ArmorStandProjectileAction",
            "description": [
                "Create a projectile that uses an armor stand.",
                "This can be used with invisible armor stands holding items from a custom resource pack for detailed custom 3D projectiles."
            ],
            "examples": [
                "chop",
                "throwsword"
            ],
            "importance": 80,
            "name": "Armor Stand Projectile",
            "parameters": {
                "active_wand": "",
                "aggro": "This will enable the thread table aggro behavior on an otherwise normal mob\\nThis makes the mob target the player that has done the most damage to to it, within track_range\\nMobs that cast spells or have other mage properties such as protection will automatically use aggro behavior.",
                "ai": "Whether or not this mob has 'AI'. A mob with AI turned off will not move or react, and also can not be pushed by velocity.",
                "allow_replacement": "",
                "amount": "The amount of an item",
                "apply_velocity": "Whether or not to apply velocity to spawned falling blocks",
                "armor_stand_arms": "",
                "armor_stand_baseplate": "",
                "armor_stand_gravity": "",
                "armor_stand_invisible": "",
                "armor_stand_marker": "",
                "armor_stand_small": "",
                "arms": "",
                "attach_duration": "",
                "attributes": "Attributes to apply to the player when holding this wand\\nIf set to passive the attributes will be applied when worn\\nIf set to stack, attributes will add to the player's current attributes",
                "aware": "",
                "baby": "Make this mob a baby mob",
                "baseplate": "",
                "block_hit_count": "How many blocks this projectile can hit before stopping\\nGenerall the projectile would need to have actions on hit that will remove blocks, otherwise it will continue to hit the same block immediately until it reaches its hit count.",
                "body_pose": "",
                "body_transform": "",
                "boots": "",
                "boots_item": "",
                "boss_bar": "",
                "brain": "Vanilla AI behaviors",
                "break_blocks": "",
                "breakable_size": "",
                "bypass_backfire": "This spell will not reflect off of reflective blocks",
                "can_pickup_items": "Whether or not the mob will be allowed to pick up items",
                "cancel_explosion": "",
                "cancel_interact": "",
                "cast": "A probability table of spells to cast\\nThis parameter is deprecated, it is better to use the triggers map",
                "cast_interval": "How often, in milliseconds, to auto-cast the cast_spell set on this wand",
                "cast_requires_item": "An item the mob must be holding in order to cast spells",
                "cast_requires_target": "If true, the mob will only cast spells if it has targeted an entity",
                "chestplate": "",
                "chestplate_item": "",
                "close_fov": "",
                "close_range": "",
                "collidable": "",
                "color": "Can be used to color particles and firework effects",
                "combustible": "",
                "default_drops": "Whether this mob should drop default vanilla drops on death",
                "dialog": "A list of speech lines for an NPC to say to nearby players",
                "dialog_face_player": "If set, the NPC will face the player they speak to\\nFacing is not smooth, direction will only change each time they speak\\nIF there are multiple players being spoken to, the NPC will try to look roughly in the center of them",
                "dialog_interval": "How long to wait before speaking each line of dialog",
                "dialog_range": "How close a player must be before the NPC will start speaking to them",
                "disabled_slots": "A bitmask of slots to disable, making it so players can not interact with them\\nYou may need to look up how to use this on the Minecraft wiki",
                "disguise": "A disguise to use\\nrequires the LibsDisguises plugin",
                "distance_weight": "Tweak how important the distance to the target is when performing targeting",
                "docile": "Make this mob avoid targeting other mobs",
                "drag": "",
                "drop_xp": "Amount of experience a mob should drop on death",
                "drops": "",
                "drops_require_player_killer": "",
                "entity_attributes": "Vanilla entity attributes to apply to the mob",
                "entity_hit_count": "",
                "entity_weight": "",
                "equip_on_respawn": "",
                "face_player": "",
                "fov": "",
                "fov_weight": "",
                "goals": "A list of pathfinder goals for this mob",
                "gravity": "The gravity the projectile has, starts from 0",
                "head_pose": "",
                "head_transform": "",
                "headshot": "Actions performed when a projectile hits the head of an entity",
                "headshot_effects": "",
                "health": "Amount of health to heal",
                "helmet": "",
                "helmet_item": "",
                "hidden": "This spell or wand template will not show up in lists\\nThis is generally used for templates not meant for player use",
                "hit_count": "How many entities the projectile can hit before expiring",
                "hit_effects": "An effect key, specifying which effects to play when the projectile hits",
                "hit_on_miss": "If set to true, hit effects and actions will still execute on a miss",
                "hit_requires_entity": "If set to true, hitting a block will count as a miss",
                "hitbox": "If true, hitbox targeting will be used\\nThis will use the vanilla (or custom) hitboxes of target entities with projectile raycasts for line\/box intersection tests\\nThe exact hit location can be determined and used in effects, and special behavior can be given to headshots",
                "hitbox_block_size": "Can be used to expand a projectile's hitbox when determining block collisions",
                "hitbox_size": "Can be used to expand a projectile's hitbox when determining entity collisions",
                "ignore_blocks": "",
                "ignore_hit_entities": "",
                "ignore_targeting": "",
                "interact_command_source": "",
                "interact_commands": "",
                "interact_costs": "",
                "interact_permission": "",
                "interact_requires_owner": "",
                "interact_spell": "A spell to cast when a player interacts with (right-clicks on) this mob",
                "interact_spell_parameters": "",
                "interact_spell_source": "",
                "interact_spell_target": "",
                "interval": "How often to update the projectile location",
                "interval_requires_target": "The mob's interval triggers will not fire unless it has a target",
                "invisible": "",
                "invulnerable": "This wand will not take damage from any source, and can not be destroyed",
                "item": "The item to use or show",
                "leash_range": "",
                "left_arm_pose": "",
                "left_arm_transform": "",
                "left_leg_pose": "",
                "left_leg_transform": "",
                "leggings": "",
                "leggings_item": "",
                "lifetime": "The time, in milliseconds, that the entity\/projectile lasts for",
                "location_offset": "",
                "loot": "",
                "mage": "Specify properties to get applied to the Mage for this mob\\nThese can be the same sort of properties you would apply to a player class or wand",
                "marker": "",
                "max_health": "The maximum health this mob or player should have",
                "min_block_range": "",
                "min_entity_range": "",
                "miss": "Actions performed when a projectile misses completely, expiring in mid-air",
                "miss_effects": "",
                "model": "",
                "modifiers": "",
                "mount": "",
                "mount_wand": "",
                "mythic_mob": "",
                "mythic_mob_level": "",
                "name": "The display name of this wand or spell to show in-game\\nCan be added directly on the wand or spell config, but it is often better to put all language in the messages.yml file so it can be easily edited and translated.",
                "no_target": "",
                "npc": "",
                "npc_weight": "",
                "offhand": "",
                "orient": "",
                "orient_head": "",
                "orient_right_arm": "",
                "otdx": "Directional vector override for target source",
                "otdy": "Directional vector override for target source",
                "otdz": "Directional vector override for target source",
                "otworld": "Directional vector override for target source",
                "otx": "Offset for target location, relative to targeted block",
                "oty": "Offset for target location, relative to targeted block",
                "otz": "Offset for target location, relative to targeted block",
                "ownable": "",
                "owner": "",
                "permissions": "",
                "persist": "",
                "pitch_max": "",
                "pitch_min": "",
                "plan": "",
                "player_weight": "",
                "potion_effects": "A map of potion effects to apply to this entity",
                "prevent_dismount": "",
                "prevent_melee": "",
                "prevent_projectiles": "",
                "prevent_teleport": "",
                "projectile_effects": "An effect key, specifying effects to use to attach to the projectile",
                "projectile_effects_use_target": "Set to true to use the projectile location as the target location (instead of the source) for projectile effects",
                "projectile_follow_player": "",
                "projectile_potion_effects": "",
                "protected": "If set, the holder of this wand will be completly invincible and untargetable by all spells\\nMagic.wand.use.protected permission to use",
                "protection": "Protection from specific damage types",
                "range": "How far, in blocks, this spell can reach before counting as a miss\\nThis can apply to a base spell, which will do instant raycast targeting, or to a CustomProjectile which will travel over time until it reaches this distance",
                "range_padding": "",
                "reactivate_wand": "",
                "reflect_count": "",
                "reflect_reorient": "",
                "reflect_reset_distance_traveled": "",
                "reflect_target_caster": "",
                "reflect_track_range": "",
                "reflect_track_target": "",
                "register_by_name": "",
                "relative_location_offset": "",
                "relentless": "",
                "remove_mounts": "",
                "remove_when_far_away": "",
                "reorient": "",
                "reset_time_on_path_change": "",
                "return_offset": "",
                "return_relative_offset": "",
                "return_to_caster": "",
                "reverse": "",
                "right_arm_item": "",
                "right_arm_pose": "",
                "right_arm_transform": "",
                "right_leg_pose": "",
                "right_leg_transform": "",
                "show_name": "Whether to show the entity's name",
                "silent": "The silent flag of the mob, to prevent it from making any sounds",
                "sitting": "",
                "small": "",
                "source_location": "",
                "spawn": "Actions performed immediately after spawning the entity or projectile",
                "spawn_reason": "",
                "speed": "",
                "spread": "",
                "spread_movement": "",
                "spread_movement_max": "",
                "start": "",
                "static": "",
                "stay": "",
                "strength": "Gives damage bonuses to specific damage types",
                "tags": "",
                "tamed": "Set to true to make this mob tamed",
                "target": "How this spell should perform its targeting\\nThis only affects the initial targeting, not any projectiles that are launched",
                "target_breakable_depth": "",
                "target_breakables": "",
                "target_min_offset": "",
                "target_self": "Whether or not this spell should targe the caster\\nThis will affect projectiles, area of effect and other actions that target multiple entities",
                "target_self_timeout": "A timeout in milliseconds, after which the projectile is allowed to target the caster",
                "targeting": "",
                "teleport": "",
                "temporary": "",
                "tick": "Actions performed on a every tick while a projectile is in flight",
                "tick_effects": "",
                "tick_size": "",
                "tmo": "",
                "track_radius": "How far away a player must get before this mob no longer chases it",
                "track_range": "",
                "track_speed": "",
                "track_target": "",
                "transformable": "",
                "triggers": "",
                "type": "The type of entity to spawn",
                "unbreakable_items": "",
                "update_launch_location": "",
                "use_block_location": "",
                "use_brush": "",
                "use_cast_location": "",
                "use_eye_location": "",
                "use_hit_location": "",
                "use_npc_name": "",
                "use_target_location": "",
                "use_wand": "",
                "use_wand_location": "",
                "variant": "",
                "velocity": "",
                "velocity_offset": "",
                "velocity_transform": "",
                "visible_delay_ticks": "",
                "wand_slot": "Where to put the wand the player was holding on the armor stand",
                "weakness": "Weakness to specific damage types",
                "xp": "Amount of experience contained in an experiene orb entity"
            },
            "short_class": "ArmorStandProjectile"
        },
        "ascend": {
            "category": "entity",
            "class_name": "AscendAction",
            "description": [
                "Move up through blocks above the player"
            ],
            "examples": [
                "blink"
            ],
            "importance": 0,
            "name": "Ascend",
            "parameters": {
                "keep_velocity": "",
                "maintain_direction": "",
                "prevent_fall": "",
                "require_build": "",
                "require_exit": "",
                "safe": "",
                "teleport_vehicle": "",
                "vertical_range": ""
            },
            "short_class": "Ascend"
        },
        "asynchronous": {
            "category": "compound",
            "class_name": "AsynchronousAction",
            "description": [
                "Performs its sub-actions outside of the flow of the rest of the action list",
                "This can be used to launch several projectiles without waiting for them to hit, for instance."
            ],
            "examples": [
                "arrow_light",
                "chainlightning",
                "fury",
                "gatling"
            ],
            "importance": 30,
            "name": "Asynchronous",
            "parameters": [],
            "short_class": "Asynchronous"
        },
        "block_search": {
            "category": "compound",
            "class_name": "BlockSearchAction",
            "description": [
                "Looks in a specific direction for blocks matching the destructible list"
            ],
            "examples": [
                "bridge",
                "pillar"
            ],
            "importance": 20,
            "name": "Block Search",
            "parameters": {
                "direction": "The direction to search"
            },
            "short_class": "BlockSearch"
        },
        "bonemeal": {
            "category": "engineering",
            "class_name": "BonemealAction",
            "description": [
                "Grows a blockk as if bonemeal had been used on it"
            ],
            "examples": [
                "growth"
            ],
            "importance": 0,
            "name": "Bonemeal",
            "parameters": [],
            "short_class": "Bonemeal"
        },
        "book": {
            "category": "",
            "class_name": "BookAction",
            "description": [
                "Modify a book-based wand, used for creating dynamic books",
                "Can also give a book"
            ],
            "examples": [
                "playerstats"
            ],
            "importance": 0,
            "name": "Book",
            "parameters": {
                "author": "The author of the book",
                "book_item": "",
                "give_book": "If true, will give a book item to the target player rather than modifying the caster's wand ",
                "pages": "A map of page numbers to lists of strings, to show as the pages of the book",
                "title": "",
                "virtual_book": ""
            },
            "short_class": "Book"
        },
        "boss_bar": {
            "category": "",
            "class_name": "BossBarAction",
            "description": [
                "Create or update a boss bar",
                "Can be used in an Interval action for animated bars"
            ],
            "examples": [],
            "importance": 0,
            "name": "Boss Bar",
            "parameters": {
                "bar_color": "",
                "bar_flags": "",
                "bar_interval": "",
                "bar_interval_randomization": "",
                "bar_progress": "",
                "bar_radius": "",
                "bar_style": "",
                "bar_title": "",
                "font": "",
                "interval": "How often to update the projectile location",
                "interval_randomization": "",
                "radius": "The radius of this sphere or circle, in blocks",
                "show_target": "",
                "style": "",
                "title": "",
                "update_title": ""
            },
            "short_class": "BossBar"
        },
        "break_block": {
            "category": "construction",
            "class_name": "BreakBlockAction",
            "description": [
                "Breaks a block naturally",
                "Can be configured to only break blocks below a certain vanilla durability",
                "Applies packet-based block breaking effects before fully destroying a block",
                "If the player does not have break permission, the visual breaking effects will still be applied but the block will not fully break"
            ],
            "examples": [
                "blast",
                "laser",
                "missile"
            ],
            "importance": 100,
            "name": "Break Block",
            "parameters": {
                "auto_block_state": "",
                "break_durability": "",
                "break_material": "",
                "break_percent": "",
                "breakable": "",
                "check_chunk": "Whether or not to check the target chunk before modifying blocks",
                "commit": "If changes made by this action should auto-commit, so that they are not undoable",
                "consume": "",
                "consume_variants": "",
                "damage": "How much damage to deal to the target",
                "durability_max_distance": "Set this to scale the amount of block damage done linearly with the distance to the source\\nThis can be used with an AreaOfEffect to damage blocks more the closer they were to the cast target\\nSet this to the maximum distance, at which the damage amount will drop off to zero",
                "fall_damage": "",
                "falling": "",
                "falling_hurts": "",
                "falling_probability": "",
                "max_damage": "",
                "physics": "",
                "physics_blocks": "",
                "reflect_chance": "",
                "replace_same": "",
                "speed": ""
            },
            "short_class": "BreakBlock"
        },
        "brush": {
            "category": "compound",
            "class_name": "BrushAction",
            "description": [
                "Change the brush used for contained actions",
                "Capable of choosing a random brush from a 'brushes' proability map"
            ],
            "examples": [
                "pollinate",
                "projector"
            ],
            "importance": 30,
            "name": "Brush",
            "parameters": {
                "brush": "A material or brush to use in this spell\\nFor non-engineering spells this determines the type of block build with actions such as ModifyBlock\\nEngineering spells generally omit this parameter and use the player's selected brush",
                "brushes": "The engineering brushes this wand can use",
                "brushmod": "A modifier to apply to the brush before selecting the main brush\\nThis can be used to set clone\/replicate options to full air, or to set the base material for map brushes",
                "replacements": "",
                "sample": ""
            },
            "short_class": "Brush"
        },
        "brush_select": {
            "category": "player",
            "class_name": "BrushSelectAction",
            "description": [
                "Open the brush selector GUI"
            ],
            "examples": [
                "brushelect"
            ],
            "importance": 0,
            "name": "Brush Select",
            "parameters": {
                "allow_absorbing": ""
            },
            "short_class": "BrushSelect"
        },
        "burn": {
            "category": "construction",
            "class_name": "BurnAction",
            "description": [
                "Light the target block on fire"
            ],
            "examples": [
                "fire"
            ],
            "importance": 50,
            "name": "Burn",
            "parameters": {
                "all_fire": "",
                "fire_type": "",
                "melt_ice": ""
            },
            "short_class": "Burn"
        },
        "cancel": {
            "category": "player",
            "class_name": "CancelAction",
            "description": [
                "Cancel any active spells, or specific spells, for the target player"
            ],
            "examples": [],
            "importance": 0,
            "name": "Cancel",
            "parameters": {
                "current": "",
                "force": "For upgrade items, this will force all properties in the upgrade template to apply to the target wand, even if they are a downgrade",
                "spells": ""
            },
            "short_class": "Cancel"
        },
        "capture": {
            "category": "entity",
            "class_name": "CaptureAction",
            "description": [
                "Remove the target entity and replace it with a spawn egg that will respawn the entity"
            ],
            "examples": [
                "capture"
            ],
            "importance": 0,
            "name": "Capture",
            "parameters": {
                "min_health": "The minimum amount of health the target entity must have",
                "remove": ""
            },
            "short_class": "Capture"
        },
        "cast": {
            "category": "",
            "class_name": "CastAction",
            "description": [
                "Cast a specific spell, optionally providing parameters",
                "This can be used to make complex combinations of spells by including one spell in another",
                "Or it could make a spell that randomly casts other spells",
                "It could also be used as a way to organize commonly-used sets of actions and use them in several different spells."
            ],
            "examples": [],
            "importance": 20,
            "name": "Cast",
            "parameters": {
                "as_target": "",
                "console": "",
                "cooldown_free": "Whether to skip cooldowns on the casted spells",
                "cost_free": "Whether to skip cost deduction on the casted spells",
                "spell": "The spell to cast",
                "spell_parameters": "Parameters to pass to the spell being cast"
            },
            "short_class": "Cast"
        },
        "cast_result": {
            "category": "",
            "class_name": "CastResultAction",
            "description": [
                "An action used for debugging specific cast results"
            ],
            "examples": [],
            "importance": 0,
            "name": "Cast Result",
            "parameters": {
                "end_result": "",
                "result": "The SpellResult to return"
            },
            "short_class": "CastResult"
        },
        "change_biome": {
            "category": "construction",
            "class_name": "ChangeBiomeAction",
            "description": [
                "Change the biome of the target block"
            ],
            "examples": [
                "permafrost"
            ],
            "importance": 0,
            "name": "Change Biome",
            "parameters": {
                "biome": "",
                "biome_replacements": ""
            },
            "short_class": "ChangeBiome"
        },
        "change_context": {
            "category": "compound",
            "class_name": "ChangeContextAction",
            "description": [
                "A complicated compound action that can be used to run sub-actions using a modified context",
                "The action context includes things such as the source and target locations and entities"
            ],
            "examples": [
                "anvil",
                "boomstown",
                "bridge",
                "meteor",
                "push",
                "randomtp",
                "sandblast"
            ],
            "importance": 40,
            "name": "Change Context",
            "parameters": {
                "destructible_materials": "The set of materials sub-actions will be allowed to break",
                "indestructible": "A list of materials that can not be modified by this spell",
                "orient_pitch": "",
                "persist_caster": "",
                "persist_target": "",
                "random_source_offset": "",
                "random_target_offset": "",
                "relative_source_offset": "Offset the source location based on the direction of that location",
                "relative_target_offset": "Offset the target location based on the direction of that location",
                "source_at_target": "",
                "source_direction": "",
                "source_direction_at_target": "",
                "source_direction_is_target": "",
                "source_direction_offset": "",
                "source_direction_speed": "",
                "source_is_caster": "Makes the caster the source, useful for actions embedded in an AreaOfEffect or other compound action which changes the source.",
                "source_is_target": "",
                "source_location": "",
                "source_offset": "",
                "source_pitch": "",
                "source_pitch_max": "",
                "source_pitch_min": "",
                "source_pitch_offset": "",
                "source_relative_direction_pitch_offset": "",
                "source_relative_direction_yaw_offset": "",
                "source_use_movement_direction": "Use the direction the the caster is moving rather than facing",
                "source_yaw": "",
                "source_yaw_offset": "",
                "swap_source_and_target": "",
                "target_attachment": "",
                "target_caster": "",
                "target_direction": "",
                "target_direction_offset": "",
                "target_direction_speed": "",
                "target_entity": "",
                "target_location": "",
                "target_offset": "Offset the target location",
                "target_pitch_offset": "",
                "target_relative_direction_pitch_offset": "",
                "target_relative_direction_yaw_offset": "",
                "target_self": "Whether or not this spell should targe the caster\\nThis will affect projectiles, area of effect and other actions that target multiple entities",
                "target_snap": "",
                "target_use_movement_direction": "Use the direction the target is moving rather than facing",
                "target_yaw_offset": "Offset the yaw of the target",
                "use_parent_source_entity": "",
                "use_parent_source_location": "",
                "use_parent_target_entity": "",
                "use_parent_target_location": "",
                "use_target_mage": ""
            },
            "short_class": "ChangeContext"
        },
        "change_parameters": {
            "category": "control",
            "class_name": "ChangeParametersAction",
            "description": [
                "Change the parameters of a spell mid-cast"
            ],
            "examples": [],
            "importance": 0,
            "name": "Change Parameters",
            "parameters": [],
            "short_class": "ChangeParameters"
        },
        "change_server": {
            "category": "player",
            "class_name": "ChangeServerAction",
            "description": [
                "Move a player to another server",
                "Requires a BungeCord server network"
            ],
            "examples": [],
            "importance": 0,
            "name": "Change Server",
            "parameters": {
                "server": ""
            },
            "short_class": "ChangeServer"
        },
        "change_world": {
            "category": "entity",
            "class_name": "ChangeWorldAction",
            "description": [
                "Move the player to a different world, but with the same coordinate as in their current world",
                "Can be configured with a set of worlds and scales, for instance to mimic nether:overworld 1:8 scale"
            ],
            "examples": [
                "phase"
            ],
            "importance": 0,
            "name": "Change World",
            "parameters": {
                "keep_velocity": "",
                "load": "",
                "maintain_direction": "",
                "prevent_fall": "",
                "require_build": "",
                "require_exit": "",
                "safe": "",
                "scale": "Can be used to scale all costs for a shop up and down",
                "target_world": "",
                "teleport_vehicle": "",
                "vertical_range": "",
                "worlds": ""
            },
            "short_class": "ChangeWorld"
        },
        "chat": {
            "category": "player",
            "class_name": "ChatAction",
            "description": [
                "Force the target player to say something in chat"
            ],
            "examples": [],
            "importance": 50,
            "name": "Chat",
            "parameters": {
                "message": "The message to send the target.\\nThe following variables can be used in this message: \\n<li>@spell : The name of the spell\\n<li>@p : The name of the caster. Can also use @pn\\n<li>@pd : The display name (nick) of the caster\\n<li>@uuid : The UUID of the caster\\n<li>@world, @x, @y, @z : The location of the caster\\n<li>@t : The name of the target. Can also use @tn\\n<li>@td : The display name (nick) of the target\\n<li>@tuuid : The UUID of the target\\n<li>@tworld, @tx, @ty, @tz : The location of the target",
                "randomized_messages": "A list of messages from which one will be randomly picked and sent to the player.\\nSetting this property will override your \"message\" property."
            },
            "short_class": "Chat"
        },
        "check_bedrock_form": {
            "category": "compound",
            "class_name": "CheckBedrockFormAction",
            "description": [
                ""
            ],
            "examples": [],
            "importance": 0,
            "name": "Check Bedrock Form",
            "parameters": {
                "button1_key": "",
                "button2_key": "",
                "fail": "Actions to run on fail instead of success",
                "invert": "Invert the text",
                "message_key": "",
                "timeout": "",
                "title_key": "",
                "trigger": "The trigger to trigger on the target mob"
            },
            "short_class": "CheckBedrockForm"
        },
        "check_block": {
            "category": "compound",
            "class_name": "CheckBlockAction",
            "description": [
                "Test if a block is in the destructible list",
                "Only runs its sub-actions if the block passes the destructible check."
            ],
            "examples": [
                "breach",
                "laser"
            ],
            "importance": 20,
            "name": "Check Block",
            "parameters": {
                "allow_brush": "",
                "allowed": "",
                "biome_actions": "",
                "biomes": "",
                "block_actions": "",
                "check_permission": "",
                "direction": "The direction to search",
                "direction_count": "How many blocks to move in the specified direction",
                "fail": "Actions to run on fail instead of success",
                "invert": "Invert the text",
                "not_biomes": "",
                "not_brush": "",
                "set_target": "Whether to set the entity or block as the target when spawned",
                "source_location": "",
                "timeout": "",
                "use_target": ""
            },
            "short_class": "CheckBlock"
        },
        "check_chat_click": {
            "category": "compound",
            "class_name": "CheckChatClickAction",
            "description": [
                ""
            ],
            "examples": [],
            "importance": 0,
            "name": "Check Chat Click",
            "parameters": {
                "Hover_message_key": "",
                "click_message_key": "",
                "click_template_key": "",
                "fail": "Actions to run on fail instead of success",
                "invert": "Invert the text",
                "message_key": "",
                "timeout": "",
                "trigger": "The trigger to trigger on the target mob"
            },
            "short_class": "CheckChatClick"
        },
        "check_entity": {
            "category": "compound",
            "class_name": "CheckEntityAction",
            "description": [
                "Test if an entity is allowed to target",
                "Only runs its sub-actions if the entity passes the checks."
            ],
            "examples": [
                "holylight"
            ],
            "importance": 20,
            "name": "Check Entity",
            "parameters": {
                "allow_caster": "",
                "allowed_entities": "",
                "allowed_entity_classes": "",
                "denied_entities": "",
                "denied_entity_classes": "",
                "fail": "Actions to run on fail instead of success",
                "invert": "Invert the text",
                "on_fire": "",
                "on_ground": "",
                "only_caster": "",
                "owned": "",
                "owner": "",
                "stay": "",
                "timeout": ""
            },
            "short_class": "CheckEntity"
        },
        "check_health": {
            "category": "compound",
            "class_name": "CheckHealthAction",
            "description": [
                "Check the target entity's health",
                "Will either stop the spell or run a set of actions, depending on the health of the target"
            ],
            "examples": [],
            "importance": 0,
            "name": "Check Health",
            "parameters": {
                "as_percentages": "Specify health in terms of percentage of max, rather than an absolute value",
                "fail": "Actions to run on fail instead of success",
                "full_health": "If true, require that the target entity be at full health",
                "invert": "Invert the text",
                "max_health": "The maximum health this mob or player should have",
                "min_health": "The minimum amount of health the target entity must have",
                "timeout": ""
            },
            "short_class": "CheckHealth"
        },
        "check_inventory": {
            "category": "compound",
            "class_name": "CheckInventoryAction",
            "description": [
                "Check the players inventory for a specific item",
                "Will run sub-actions if the item is found",
                "If no sub-actions are given, will cancel the spell if the item is not found"
            ],
            "examples": [],
            "importance": 0,
            "name": "Check Inventory",
            "parameters": {
                "allowed_enchantments": "",
                "blocked_enchantments": "",
                "fail": "Actions to run on fail instead of success",
                "invert": "Invert the text",
                "item": "The item to use or show",
                "material_only": "",
                "slot": "",
                "target_block": "",
                "target_caster": "",
                "timeout": ""
            },
            "short_class": "CheckInventory"
        },
        "check_lore": {
            "category": "compound",
            "class_name": "CheckLoreAction",
            "description": [
                "React to specific lore elements in the wand item's lore"
            ],
            "examples": [],
            "importance": 0,
            "name": "Check Lore",
            "parameters": {
                "fail": "Actions to run on fail instead of success",
                "invert": "Invert the text",
                "pattern": "",
                "timeout": ""
            },
            "short_class": "CheckLore"
        },
        "check_mana": {
            "category": "compound",
            "class_name": "CheckManaAction",
            "description": [
                "Test if a player has or does not have an amount of mana",
                "Only runs its sub-actions if player's mana is as required."
            ],
            "examples": [],
            "importance": 20,
            "name": "Check Mana",
            "parameters": {
                "fail": "Actions to run on fail instead of success",
                "invert": "Invert the text",
                "require_mana": "",
                "require_mana_empty": "",
                "require_mana_not_full": "",
                "require_mana_percentage": "",
                "timeout": ""
            },
            "short_class": "CheckMana"
        },
        "check_modifiers": {
            "category": "compound",
            "class_name": "CheckModifiersAction",
            "description": [
                "React to specific modifiers being applied to the target"
            ],
            "examples": [],
            "importance": 0,
            "name": "Check Modifiers",
            "parameters": {
                "blocked": "",
                "fail": "Actions to run on fail instead of success",
                "invert": "Invert the text",
                "required": "",
                "timeout": ""
            },
            "short_class": "CheckModifiers"
        },
        "check_potion_effects": {
            "category": "compound",
            "class_name": "CheckPotionEffectsAction",
            "description": [
                "React to specific potion effects being applied to the target"
            ],
            "examples": [],
            "importance": 0,
            "name": "Check Potion Effects",
            "parameters": {
                "blocked": "",
                "fail": "Actions to run on fail instead of success",
                "invert": "Invert the text",
                "required": "",
                "timeout": ""
            },
            "short_class": "CheckPotionEffects"
        },
        "check_requirements": {
            "category": "compound",
            "class_name": "CheckRequirementsAction",
            "description": [
                "Runs a set of actions only if the caster meets certain requirements",
                "Some requirement types expect a single value, others expect a section containing one or more of: min, max, value. These requirements can be a range or require a specific value to be set.",
                "permission: Check a permission",
                "path: The player must have reached a progression path",
                "path_exact: The player must current be on a progression path",
                "path_end: The player must be ready to advance from a path",
                "wand: The player must be holding a specific wand",
                "holding_wand: The player must be holding any wand (true\/false)",
                "class: The player must have unlocked a specific mage class",
                "wand_tags: The player must be holding a wand with specific tags",
                "wands: The player must be holding one of a set of wands",
                "wand_properties: The player's wand must have properties within a specific range (ranged)",
                "class_properties: The player's mage class must have properties within a specific range (ranged)",
                "attributes: The player must have some attributes within a specific range (ranged)",
                "time: Only during a certain time of day (ranged)",
                "light: Only at certain light levels (ranged)"
            ],
            "examples": [
                "sunstrike"
            ],
            "importance": 0,
            "name": "Check Requirements",
            "parameters": {
                "fail": "Actions to run on fail instead of success",
                "invert": "Invert the text",
                "requirement": "",
                "requirements": "",
                "send_message": "",
                "timeout": "",
                "use_target": ""
            },
            "short_class": "CheckRequirements"
        },
        "check_trigger": {
            "category": "compound",
            "class_name": "CheckTriggerAction",
            "description": [
                "React to a trigger having happened since the last check",
                "This can be unsed in an Interval action to wait until some time has passed or a trigger happens"
            ],
            "examples": [],
            "importance": 0,
            "name": "Check Trigger",
            "parameters": {
                "fail": "Actions to run on fail instead of success",
                "invert": "Invert the text",
                "timeout": "",
                "trigger": "The trigger to trigger on the target mob"
            },
            "short_class": "CheckTrigger"
        },
        "check_velocity": {
            "category": "compound",
            "class_name": "CheckVelocityAction",
            "description": [
                "React to the velocity of the target"
            ],
            "examples": [],
            "importance": 0,
            "name": "Check Velocity",
            "parameters": {
                "fail": "Actions to run on fail instead of success",
                "invert": "Invert the text",
                "max_speed": "",
                "min_speed": "",
                "timeout": ""
            },
            "short_class": "CheckVelocity"
        },
        "clear_chat": {
            "category": "player",
            "class_name": "ClearChatAction",
            "description": [
                "Clear the target player's chat log",
                "This is done by sending 100 blank lines"
            ],
            "examples": [],
            "importance": 0,
            "name": "Clear Chat",
            "parameters": [],
            "short_class": "ClearChat"
        },
        "clear_fall_protection": {
            "category": "",
            "class_name": "ClearFallProtectionAction",
            "description": [
                "Clear any fall protection set on the target"
            ],
            "examples": [],
            "importance": 0,
            "name": "Clear Fall Protection",
            "parameters": [],
            "short_class": "ClearFallProtection"
        },
        "clear_inventory": {
            "category": "",
            "class_name": "ClearInventoryAction",
            "description": [
                "Clear the inventory of the target"
            ],
            "examples": [],
            "importance": 0,
            "name": "Clear Inventory",
            "parameters": [],
            "short_class": "ClearInventory"
        },
        "color_item": {
            "category": "",
            "class_name": "ColorItemAction",
            "description": [
                "Color a colorable item such as leather armor or horse armor"
            ],
            "examples": [],
            "importance": 0,
            "name": "Color Item",
            "parameters": {
                "color": "Can be used to color particles and firework effects",
                "color_wand": "",
                "slot": "",
                "slots": ""
            },
            "short_class": "ColorItem"
        },
        "command": {
            "category": "control",
            "class_name": "CommandAction",
            "description": [
                "Run one or more commands",
                "Supports the following variables: @spell, @pd (caster display name), @p, @pn (same as @p, caster name), @uuid, @world, @x, @y, @z, @tworld, @tx, @ty, @tz (target location), @td (target display name), @t, @tn (same as @t, target name), @tuuid"
            ],
            "examples": [
                "ledger",
                "mute",
                "respawn"
            ],
            "importance": 70,
            "name": "Command",
            "parameters": {
                "as_target": "",
                "command": "The command to execute\\nThe following variables can be used in this command:\\n<li>@spell : The name of the spell\\n<li>@p : The name of the caster. Can also use @pn\\n<li>@pd : The display name (nick) of the caster\\n<li>@uuid : The UUID of the caster\\n<li>@world, @x, @y, @z : The location of the caster\\n<li>@t : The name of the target. Can also use @tn\\n<li>@td : The display name (nick) of the target\\n<li>@tuuid : The UUID of the target\\n<li>@tworld, @tx, @ty, @tz : The location of the target",
                "console": "",
                "equation": "",
                "escape_sequence": "",
                "local_echo": "",
                "modal": "",
                "op": "",
                "timeout": "",
                "variables": ""
            },
            "short_class": "Command"
        },
        "commit": {
            "category": "",
            "class_name": "CommitAction",
            "description": [
                "Clear your undo queue, making all spell changes permanent"
            ],
            "examples": [],
            "importance": 0,
            "name": "Commit",
            "parameters": {
                "commit_all": ""
            },
            "short_class": "Commit"
        },
        "cone_of_effect": {
            "category": "compound",
            "class_name": "ConeOfEffectAction",
            "description": [
                "Target all entities within a cone in front of the caster"
            ],
            "examples": [
                "laser",
                "push"
            ],
            "importance": 80,
            "name": "Cone Of Effect",
            "parameters": {
                "close_fov": "",
                "close_range": "",
                "distance_weight": "Tweak how important the distance to the target is when performing targeting",
                "entity_weight": "",
                "fov": "",
                "fov_weight": "",
                "hitbox": "If true, hitbox targeting will be used\\nThis will use the vanilla (or custom) hitboxes of target entities with projectile raycasts for line\/box intersection tests\\nThe exact hit location can be determined and used in effects, and special behavior can be given to headshots",
                "hitbox_block_size": "Can be used to expand a projectile's hitbox when determining block collisions",
                "hitbox_size": "Can be used to expand a projectile's hitbox when determining entity collisions",
                "ignore_blocks": "",
                "npc_weight": "",
                "otdx": "Directional vector override for target source",
                "otdy": "Directional vector override for target source",
                "otdz": "Directional vector override for target source",
                "otworld": "Directional vector override for target source",
                "otx": "Offset for target location, relative to targeted block",
                "oty": "Offset for target location, relative to targeted block",
                "otz": "Offset for target location, relative to targeted block",
                "player_weight": "",
                "range": "How far, in blocks, this spell can reach before counting as a miss\\nThis can apply to a base spell, which will do instant raycast targeting, or to a CustomProjectile which will travel over time until it reaches this distance",
                "range_padding": "",
                "sort": "",
                "target": "How this spell should perform its targeting\\nThis only affects the initial targeting, not any projectiles that are launched",
                "target_breakable_depth": "",
                "target_count": "",
                "target_min_offset": "",
                "tmo": ""
            },
            "short_class": "ConeOfEffect"
        },
        "count": {
            "category": "control",
            "class_name": "CountAction",
            "description": [
                "Count up the number of blocks or entities targeted and message the count to the caster"
            ],
            "examples": [
                "counter"
            ],
            "importance": 0,
            "name": "Count",
            "parameters": [],
            "short_class": "Count"
        },
        "cover": {
            "category": "compound",
            "class_name": "CoverAction",
            "description": [
                "Target the first solid block below the current target"
            ],
            "examples": [
                "fire",
                "frost"
            ],
            "importance": 50,
            "name": "Cover",
            "parameters": {
                "target_above": "",
                "target_highest": ""
            },
            "short_class": "Cover"
        },
        "create_automaton": {
            "category": "",
            "class_name": "CreateAutomatonAction",
            "description": [
                "Deprecated action, replaced by CreateMagicBlock"
            ],
            "examples": [],
            "importance": 0,
            "name": "Create Automaton",
            "parameters": {
                "automaton": "",
                "automaton_parameters": ""
            },
            "short_class": "CreateAutomaton"
        },
        "create_field": {
            "category": "construction",
            "class_name": "CreateFieldAction",
            "description": [
                "Create a PreciousStones field"
            ],
            "examples": [],
            "importance": 0,
            "name": "Create Field",
            "parameters": {
                "auto_block_state": "",
                "breakable": "",
                "check_chunk": "Whether or not to check the target chunk before modifying blocks",
                "commit": "If changes made by this action should auto-commit, so that they are not undoable",
                "consume": "",
                "consume_variants": "",
                "damage": "How much damage to deal to the target",
                "fall_damage": "",
                "falling": "",
                "falling_hurts": "",
                "falling_probability": "",
                "field_rent": "",
                "field_rent_period": "",
                "field_rent_sign_direction": "",
                "field_type": "",
                "max_damage": "",
                "physics": "",
                "physics_blocks": "",
                "reflect_chance": "",
                "replace_same": "",
                "speed": ""
            },
            "short_class": "CreateField"
        },
        "create_magic_block": {
            "category": "",
            "class_name": "CreateMagicBlockAction",
            "description": [
                "Create a new magic block at the target location"
            ],
            "examples": [],
            "importance": 0,
            "name": "Create Magic Block",
            "parameters": {
                "block_parameters": "",
                "template": "Used internally in item data to say which template a wand was created from\\nDo not set this in configurations"
            },
            "short_class": "CreateMagicBlock"
        },
        "create_n_p_c": {
            "category": "",
            "class_name": "CreateNPCAction",
            "description": [
                "Create a new NPC at the target location"
            ],
            "examples": [],
            "importance": 0,
            "name": "Create NPC",
            "parameters": {
                "key_book_contents": "",
                "key_item": "",
                "key_overrides": "",
                "name": "The display name of this wand or spell to show in-game\\nCan be added directly on the wand or spell config, but it is often better to put all language in the messages.yml file so it can be easily edited and translated.",
                "npc_parameters": "",
                "npc_template": ""
            },
            "short_class": "CreateNPC"
        },
        "create_plot": {
            "category": "construction",
            "class_name": "CreatePlotAction",
            "description": [
                "Create a Towny plot"
            ],
            "examples": [],
            "importance": 0,
            "name": "Create Plot",
            "parameters": {
                "price": ""
            },
            "short_class": "CreatePlot"
        },
        "custom_projectile": {
            "category": "compound",
            "class_name": "CustomProjectileAction",
            "description": [
                "A flexible custom projectile",
                "This projectile can be made to reflect off surfaces, hit multiple entities or blocks, run spell actions as it travels, and more.",
                "It is able to mimic a gravity-bound projectile, home in on a target, and perform staged animations",
                "This is the base class for AmorStandProjectile and EntityProjectile"
            ],
            "examples": [
                "fury",
                "missile",
                "railgun"
            ],
            "importance": 100,
            "name": "Custom Projectile",
            "parameters": {
                "attach_duration": "",
                "block_hit_count": "How many blocks this projectile can hit before stopping\\nGenerall the projectile would need to have actions on hit that will remove blocks, otherwise it will continue to hit the same block immediately until it reaches its hit count.",
                "break_blocks": "",
                "breakable_size": "",
                "bypass_backfire": "This spell will not reflect off of reflective blocks",
                "close_fov": "",
                "close_range": "",
                "distance_weight": "Tweak how important the distance to the target is when performing targeting",
                "drag": "",
                "entity_hit_count": "",
                "entity_weight": "",
                "fov": "",
                "fov_weight": "",
                "gravity": "The gravity the projectile has, starts from 0",
                "headshot": "Actions performed when a projectile hits the head of an entity",
                "headshot_effects": "",
                "hit_count": "How many entities the projectile can hit before expiring",
                "hit_effects": "An effect key, specifying which effects to play when the projectile hits",
                "hit_on_miss": "If set to true, hit effects and actions will still execute on a miss",
                "hit_requires_entity": "If set to true, hitting a block will count as a miss",
                "hitbox": "If true, hitbox targeting will be used\\nThis will use the vanilla (or custom) hitboxes of target entities with projectile raycasts for line\/box intersection tests\\nThe exact hit location can be determined and used in effects, and special behavior can be given to headshots",
                "hitbox_block_size": "Can be used to expand a projectile's hitbox when determining block collisions",
                "hitbox_size": "Can be used to expand a projectile's hitbox when determining entity collisions",
                "ignore_blocks": "",
                "ignore_hit_entities": "",
                "ignore_targeting": "",
                "interval": "How often to update the projectile location",
                "lifetime": "The time, in milliseconds, that the entity\/projectile lasts for",
                "min_block_range": "",
                "min_entity_range": "",
                "miss": "Actions performed when a projectile misses completely, expiring in mid-air",
                "miss_effects": "",
                "npc_weight": "",
                "orient": "",
                "otdx": "Directional vector override for target source",
                "otdy": "Directional vector override for target source",
                "otdz": "Directional vector override for target source",
                "otworld": "Directional vector override for target source",
                "otx": "Offset for target location, relative to targeted block",
                "oty": "Offset for target location, relative to targeted block",
                "otz": "Offset for target location, relative to targeted block",
                "pitch_max": "",
                "pitch_min": "",
                "plan": "",
                "player_weight": "",
                "projectile_effects": "An effect key, specifying effects to use to attach to the projectile",
                "projectile_effects_use_target": "Set to true to use the projectile location as the target location (instead of the source) for projectile effects",
                "projectile_follow_player": "",
                "range": "How far, in blocks, this spell can reach before counting as a miss\\nThis can apply to a base spell, which will do instant raycast targeting, or to a CustomProjectile which will travel over time until it reaches this distance",
                "range_padding": "",
                "reflect_count": "",
                "reflect_reorient": "",
                "reflect_reset_distance_traveled": "",
                "reflect_target_caster": "",
                "reflect_track_range": "",
                "reflect_track_target": "",
                "reorient": "",
                "reset_time_on_path_change": "",
                "return_offset": "",
                "return_relative_offset": "",
                "return_to_caster": "",
                "reverse": "",
                "source_location": "",
                "speed": "",
                "spread": "",
                "spread_movement": "",
                "spread_movement_max": "",
                "start": "",
                "target": "How this spell should perform its targeting\\nThis only affects the initial targeting, not any projectiles that are launched",
                "target_breakable_depth": "",
                "target_breakables": "",
                "target_min_offset": "",
                "target_self": "Whether or not this spell should targe the caster\\nThis will affect projectiles, area of effect and other actions that target multiple entities",
                "target_self_timeout": "A timeout in milliseconds, after which the projectile is allowed to target the caster",
                "tick": "Actions performed on a every tick while a projectile is in flight",
                "tick_effects": "",
                "tick_size": "",
                "tmo": "",
                "track_range": "",
                "track_speed": "",
                "track_target": "",
                "update_launch_location": "",
                "use_block_location": "",
                "use_cast_location": "",
                "use_eye_location": "",
                "use_hit_location": "",
                "use_target_location": "",
                "use_wand_location": "",
                "velocity": "",
                "velocity_transform": ""
            },
            "short_class": "CustomProjectile"
        },
        "cycle_block": {
            "category": "construction",
            "class_name": "CycleBlockAction",
            "description": [
                "Change blocks to other blocks using a mapping list"
            ],
            "examples": [
                "alter"
            ],
            "importance": 0,
            "name": "Cycle Block",
            "parameters": {
                "cycle_colors": "If true, configured color blocks will automatically cycle",
                "cycle_variants": "",
                "materials": "A list of materials to use"
            },
            "short_class": "CycleBlock"
        },
        "cycle_entity": {
            "category": "entity",
            "class_name": "CycleEntityAction",
            "description": [
                "Change entities to other entity types using a mapping list"
            ],
            "examples": [
                "alter"
            ],
            "importance": 0,
            "name": "Cycle Entity",
            "parameters": [],
            "short_class": "CycleEntity"
        },
        "cylinder": {
            "category": "compound",
            "class_name": "CylinderAction",
            "description": [
                "Target all blocks in a cylinder"
            ],
            "examples": [
                "walls"
            ],
            "importance": 0,
            "name": "Cylinder",
            "parameters": {
                "center_probability": "",
                "center_x": "",
                "center_y": "",
                "center_z": "",
                "check_chunk": "Whether or not to check the target chunk before modifying blocks",
                "orient": "",
                "orient_pitch": "",
                "orient_pitch_snap": "",
                "orient_snap": "",
                "outer_probability": "",
                "probability": "",
                "radius": "The radius of this sphere or circle, in blocks",
                "radius_padding": "",
                "reorient": "",
                "replace": "",
                "thickness": "",
                "use_brush_size": "",
                "volume_type": "",
                "x_size": "Size along the x axis",
                "y_size": "Size along the y axis",
                "z_size": "Size along the z axis"
            },
            "short_class": "Cylinder"
        },
        "damage": {
            "category": "entity",
            "class_name": "DamageAction",
            "description": [
                "Damage the target entity"
            ],
            "examples": [
                "missile",
                "wound"
            ],
            "importance": 100,
            "name": "Damage",
            "parameters": {
                "cancel_on_kill_target": "",
                "critical_damage_multiplier": "",
                "critical_effects": "",
                "critical_probability": "",
                "damage": "How much damage to deal to the target",
                "damage_max_distance": "Set this to scale the amount of damage dealt linearly with the distance to the source\\nThis can be used with an AreaOfEffect to damage targets more the closer they were to the cast target\\nSet this to the maximum distance, at which the damage amount will drop off to zero",
                "damage_min_distance": "",
                "damage_multiplier": "A multiplier to apply to the damage done by this action\\nThis can be used with spell levels or headshot parameters, to make it easy to scale up damage while still being able to tweak the base damage value",
                "damage_source_location": "The location on the target entity to use when calculating distance-based damage",
                "damage_type": "The type of damage to apply to the target\\nNote that using any custom damage type other than 'magic' will result in the caster not showing up as the source of damage to the target\\nThis may be important if using quest, arena or other plugins that care about who does damage for the purposes of giving rewards.",
                "elemental_damage": "The amount of damage to do to an Elemental from the Elementals plugin.",
                "entity_damage": "The amount of damage to apply to non-player targets",
                "invert_distance": "",
                "knockback_resistance": "",
                "magic_damage": "Determines whether or not to use \"magic\" (thrown potion) damage versus normal damage.\\nMagic damage ignores armor, and is the default for damaging spells- set this to false if you wish armor to protect from spell damage.",
                "magic_entity_damage": "This can be used to turn off magic damage specifically when targeting non-players.",
                "min_damage": "",
                "no_damage_ticks": "",
                "percentage": "",
                "player_damage": "",
                "set_last_damaged": "",
                "set_last_damaged_by": ""
            },
            "short_class": "Damage"
        },
        "deactivate": {
            "category": "player",
            "class_name": "DeactivateAction",
            "description": [
                "Deactivate active spells for the target"
            ],
            "examples": [
                "curse",
                "silence",
                "stun"
            ],
            "importance": 0,
            "name": "Deactivate",
            "parameters": {
                "deactivate_self": ""
            },
            "short_class": "Deactivate"
        },
        "debugger": {
            "category": "player",
            "class_name": "DebuggerAction",
            "description": [
                "Turn on the spell debugger"
            ],
            "examples": [
                "debugger"
            ],
            "importance": 0,
            "name": "Debugger",
            "parameters": {
                "check": "",
                "check_block": "",
                "check_brain": "",
                "force": "For upgrade items, this will force all properties in the upgrade template to apply to the target wand, even if they are a downgrade",
                "level": ""
            },
            "short_class": "Debugger"
        },
        "delay": {
            "category": "control",
            "class_name": "DelayAction",
            "description": [
                "Don't proceed to the next action until some amount of time has passed",
                "Can be used at the beginning of a spell for a 'warmup' period, and will advertise the warmup in spell lore if the warmup parameter is used."
            ],
            "examples": [
                "day",
                "gatling",
                "kill",
                "night"
            ],
            "importance": 100,
            "name": "Delay",
            "parameters": {
                "delay": "Delay to wait before continuing, in milliseconds",
                "warmup": "An alias for the 'delay' parameter of the Delay action, a delay in milliseconds\\nIf present this will be shown in lore as the spells' warmup time"
            },
            "short_class": "Delay"
        },
        "descend": {
            "category": "entity",
            "class_name": "DescendAction",
            "description": [
                "Move down through the blocks underneath the caster"
            ],
            "examples": [
                "blink"
            ],
            "importance": 0,
            "name": "Descend",
            "parameters": {
                "keep_velocity": "",
                "maintain_direction": "",
                "prevent_fall": "",
                "require_build": "",
                "require_exit": "",
                "safe": "",
                "teleport_vehicle": "",
                "vertical_range": ""
            },
            "short_class": "Descend"
        },
        "disable_physics": {
            "category": "construction",
            "class_name": "DisablePhysicsAction",
            "description": [
                "Temporarily disable block physics updates"
            ],
            "examples": [
                "portal"
            ],
            "importance": 0,
            "name": "Disable Physics",
            "parameters": {
                "duration": "How long an effect or spell should last, in milliseconds",
                "physics_buffer": "",
                "undo": "How long to wait, in milliseconds, before this spell will undo.\\nThe timer starts when the spell finishes completely"
            },
            "short_class": "DisablePhysics"
        },
        "disarm": {
            "category": "entity",
            "class_name": "DisarmAction",
            "description": [
                "Remove the item the target is holding",
                "For target players will optionally move the item into their inventory instead of throwing it on the ground."
            ],
            "examples": [
                "arrow_shock",
                "disarm"
            ],
            "importance": 30,
            "name": "Disarm",
            "parameters": {
                "display_name": "A custom display name to use instead of the pre-formatted name",
                "keep_in_inventory": "If targeting a player, their wand will not be dropped on the ground but will be moved into their inventory\\nIt will be put back on undo",
                "max_slot": "",
                "min_slot": ""
            },
            "short_class": "Disarm"
        },
        "disc": {
            "category": "compound",
            "class_name": "DiscAction",
            "description": [
                "Target all blocks within a 2D circular disc"
            ],
            "examples": [
                "frost",
                "permafrost",
                "reflect"
            ],
            "importance": 50,
            "name": "Disc",
            "parameters": {
                "axis": "",
                "brush_axis": "",
                "center_probability": "",
                "center_x": "",
                "center_y": "",
                "center_z": "",
                "check_chunk": "Whether or not to check the target chunk before modifying blocks",
                "orient": "",
                "orient_pitch": "",
                "orient_pitch_snap": "",
                "orient_snap": "",
                "outer_probability": "",
                "probability": "",
                "radius": "The radius of this sphere or circle, in blocks",
                "radius_padding": "",
                "reorient": "",
                "replace": "",
                "thickness": "",
                "use_brush_size": "",
                "volume_type": "",
                "x_size": "Size along the x axis",
                "y_size": "Size along the y axis",
                "z_size": "Size along the z axis"
            },
            "short_class": "Disc"
        },
        "disguise": {
            "category": "entity",
            "class_name": "DisguiseAction",
            "description": [
                "Apply a disguise to an entity",
                "Requires the ProtocolLib and LibsDisguises plugins"
            ],
            "examples": [
                "polymorph"
            ],
            "importance": 0,
            "name": "Disguise",
            "parameters": {
                "disguise": "A disguise to use\\nrequires the LibsDisguises plugin",
                "disguise_target": "What player to use when disguising\\nThis will copy the target player's skin"
            },
            "short_class": "Disguise"
        },
        "door": {
            "category": "construction",
            "class_name": "DoorAction",
            "description": [
                "Open or close a door"
            ],
            "examples": [
                "admission"
            ],
            "importance": 0,
            "name": "Door",
            "parameters": {
                "type": "The type of entity to spawn"
            },
            "short_class": "Door"
        },
        "drop": {
            "category": "construction",
            "class_name": "DropAction",
            "description": [
                "Destroy blocks and drop items as if they were broken naturally"
            ],
            "examples": [
                "chop",
                "mine"
            ],
            "importance": 90,
            "name": "Drop",
            "parameters": {
                "drop_count": "",
                "falling": "",
                "give_to_caster": "Give the taken item to the caster",
                "tool": ""
            },
            "short_class": "Drop"
        },
        "drop_item": {
            "category": "entity",
            "class_name": "DropItemAction",
            "description": [
                "Drop an item on the ground"
            ],
            "examples": [],
            "importance": 0,
            "name": "Drop Item",
            "parameters": {
                "item": "The item to use or show"
            },
            "short_class": "DropItem"
        },
        "drop_skull": {
            "category": "",
            "class_name": "DropSkullAction",
            "description": [
                "Drop the skull of the target entity"
            ],
            "examples": [],
            "importance": 0,
            "name": "Drop Skull",
            "parameters": {
                "allow_blocks": "",
                "allow_entities": "",
                "drop_at_source": ""
            },
            "short_class": "DropSkull"
        },
        "electrify": {
            "category": "entity",
            "class_name": "ElectrifyAction",
            "description": [
                "Cause a target creeper to be electrified"
            ],
            "examples": [
                "arrow_shock",
                "chainlightning"
            ],
            "importance": 0,
            "name": "Electrify",
            "parameters": {
                "electrify": ""
            },
            "short_class": "Electrify"
        },
        "enchant_wand": {
            "category": "player",
            "class_name": "EnchantWandAction",
            "description": [
                "Randomly upgrade a wand, as if enchanted via the old enchanting system",
                "Will add spells and other properties to a wand randomly, as determined by its current path configuration"
            ],
            "examples": [
                "enchantwand"
            ],
            "importance": 0,
            "name": "Enchant Wand",
            "parameters": {
                "levels": "",
                "path": "A progression path that a wand will follow\\nWhen enchanting or using the spellshop, a path will determine what spells are available to a player\\nPaths may upgrade to other paths in a progression, when a player learns all of the spells available on their current path they will progress to the next.",
                "path_exact": "",
                "requires": "",
                "use_xp": ""
            },
            "short_class": "EnchantWand"
        },
        "entity_animation": {
            "category": "",
            "class_name": "EntityAnimationAction",
            "description": [
                "Fore the target entity to perform an entity animation, such as arm swing"
            ],
            "examples": [],
            "importance": 0,
            "name": "Entity Animation",
            "parameters": {
                "animation": ""
            },
            "short_class": "EntityAnimation"
        },
        "entity_projectile": {
            "category": "compound",
            "class_name": "EntityProjectileAction",
            "description": [
                "A CustomProjectile with an entity attached",
                "Ever want to attack someone using a flying llama?"
            ],
            "examples": [],
            "importance": 40,
            "name": "Entity Projectile",
            "parameters": {
                "allow_replacement": "",
                "apply_velocity": "Whether or not to apply velocity to spawned falling blocks",
                "attach_duration": "",
                "block_hit_count": "How many blocks this projectile can hit before stopping\\nGenerall the projectile would need to have actions on hit that will remove blocks, otherwise it will continue to hit the same block immediately until it reaches its hit count.",
                "break_blocks": "",
                "breakable_size": "",
                "bypass_backfire": "This spell will not reflect off of reflective blocks",
                "close_fov": "",
                "close_range": "",
                "distance_weight": "Tweak how important the distance to the target is when performing targeting",
                "drag": "",
                "entity_hit_count": "",
                "entity_weight": "",
                "fov": "",
                "fov_weight": "",
                "gravity": "The gravity the projectile has, starts from 0",
                "headshot": "Actions performed when a projectile hits the head of an entity",
                "headshot_effects": "",
                "hit_count": "How many entities the projectile can hit before expiring",
                "hit_effects": "An effect key, specifying which effects to play when the projectile hits",
                "hit_on_miss": "If set to true, hit effects and actions will still execute on a miss",
                "hit_requires_entity": "If set to true, hitting a block will count as a miss",
                "hitbox": "If true, hitbox targeting will be used\\nThis will use the vanilla (or custom) hitboxes of target entities with projectile raycasts for line\/box intersection tests\\nThe exact hit location can be determined and used in effects, and special behavior can be given to headshots",
                "hitbox_block_size": "Can be used to expand a projectile's hitbox when determining block collisions",
                "hitbox_size": "Can be used to expand a projectile's hitbox when determining entity collisions",
                "ignore_blocks": "",
                "ignore_hit_entities": "",
                "ignore_targeting": "",
                "interval": "How often to update the projectile location",
                "lifetime": "The time, in milliseconds, that the entity\/projectile lasts for",
                "location_offset": "",
                "min_block_range": "",
                "min_entity_range": "",
                "miss": "Actions performed when a projectile misses completely, expiring in mid-air",
                "miss_effects": "",
                "no_target": "",
                "npc_weight": "",
                "orient": "",
                "otdx": "Directional vector override for target source",
                "otdy": "Directional vector override for target source",
                "otdz": "Directional vector override for target source",
                "otworld": "Directional vector override for target source",
                "otx": "Offset for target location, relative to targeted block",
                "oty": "Offset for target location, relative to targeted block",
                "otz": "Offset for target location, relative to targeted block",
                "pitch_max": "",
                "pitch_min": "",
                "plan": "",
                "player_weight": "",
                "projectile_effects": "An effect key, specifying effects to use to attach to the projectile",
                "projectile_effects_use_target": "Set to true to use the projectile location as the target location (instead of the source) for projectile effects",
                "projectile_follow_player": "",
                "projectile_potion_effects": "",
                "range": "How far, in blocks, this spell can reach before counting as a miss\\nThis can apply to a base spell, which will do instant raycast targeting, or to a CustomProjectile which will travel over time until it reaches this distance",
                "range_padding": "",
                "reflect_count": "",
                "reflect_reorient": "",
                "reflect_reset_distance_traveled": "",
                "reflect_target_caster": "",
                "reflect_track_range": "",
                "reflect_track_target": "",
                "relative_location_offset": "",
                "reorient": "",
                "reset_time_on_path_change": "",
                "return_offset": "",
                "return_relative_offset": "",
                "return_to_caster": "",
                "reverse": "",
                "source_location": "",
                "spawn": "Actions performed immediately after spawning the entity or projectile",
                "spawn_reason": "",
                "speed": "",
                "spread": "",
                "spread_movement": "",
                "spread_movement_max": "",
                "start": "",
                "target": "How this spell should perform its targeting\\nThis only affects the initial targeting, not any projectiles that are launched",
                "target_breakable_depth": "",
                "target_breakables": "",
                "target_min_offset": "",
                "target_self": "Whether or not this spell should targe the caster\\nThis will affect projectiles, area of effect and other actions that target multiple entities",
                "target_self_timeout": "A timeout in milliseconds, after which the projectile is allowed to target the caster",
                "teleport": "",
                "tick": "Actions performed on a every tick while a projectile is in flight",
                "tick_effects": "",
                "tick_size": "",
                "tmo": "",
                "track_range": "",
                "track_speed": "",
                "track_target": "",
                "type": "The type of entity to spawn",
                "update_launch_location": "",
                "use_block_location": "",
                "use_cast_location": "",
                "use_eye_location": "",
                "use_hit_location": "",
                "use_target_location": "",
                "use_wand_location": "",
                "variant": "",
                "velocity": "",
                "velocity_offset": "",
                "velocity_transform": ""
            },
            "short_class": "EntityProjectile"
        },
        "entity_select": {
            "category": "compound",
            "class_name": "EntitySelectAction",
            "description": [
                "Show a GUI allowing the player to select nearby entities to target",
                "Will run its sub-actions with the selected entity as the target"
            ],
            "examples": [
                "airstrike"
            ],
            "importance": 0,
            "name": "Entity Select",
            "parameters": {
                "default_icon": "",
                "limit": "",
                "radius": "The radius of this sphere or circle, in blocks"
            },
            "short_class": "EntitySelect"
        },
        "equation": {
            "category": "compound",
            "class_name": "EquationAction",
            "description": [
                "Target blocks based on a 3-d equation"
            ],
            "examples": [],
            "importance": 0,
            "name": "Equation",
            "parameters": {
                "iterations": "Number of times to repeat the effect",
                "iterations2": "",
                "orient": "",
                "orient_pitch": "",
                "reorient": "",
                "use_target_location": "",
                "variable": "",
                "variable2": "",
                "x2_equation": "The equation used to calculate the x location of the inner effect",
                "x_equation": "The equation used to calculate the x location of the effect",
                "y2_equation": "The equation used to calculate the y location of the inner effect",
                "y_equation": "The equation used to calculate the y location of the effect",
                "z2_equation": "The equation used to calculate the z location of the inner effect",
                "z_equation": "The equation used to calculate the z location of the effect"
            },
            "short_class": "Equation"
        },
        "equation_volume": {
            "category": "compound",
            "class_name": "EquationVolumeAction",
            "description": [
                "Target blocks inside of a cuboid, choosing brushes based on an equation"
            ],
            "examples": [],
            "importance": 0,
            "name": "Equation Volume",
            "parameters": {
                "brushes": "The engineering brushes this wand can use",
                "brushmod": "A modifier to apply to the brush before selecting the main brush\\nThis can be used to set clone\/replicate options to full air, or to set the base material for map brushes",
                "center_probability": "",
                "center_x": "",
                "center_y": "",
                "center_z": "",
                "check_chunk": "Whether or not to check the target chunk before modifying blocks",
                "equation": "",
                "orient": "",
                "orient_pitch": "",
                "orient_pitch_snap": "",
                "orient_snap": "",
                "outer_probability": "",
                "probability": "",
                "radius": "The radius of this sphere or circle, in blocks",
                "radius_padding": "",
                "reorient": "",
                "replace": "",
                "thickness": "",
                "use_brush_size": "",
                "volume_type": "",
                "x_size": "Size along the x axis",
                "y_size": "Size along the y axis",
                "z_size": "Size along the z axis"
            },
            "short_class": "EquationVolume"
        },
        "equip": {
            "category": "",
            "class_name": "EquipAction",
            "description": [
                "Force the target entity to equip specific items"
            ],
            "examples": [],
            "importance": 0,
            "name": "Equip",
            "parameters": {
                "armor_slot": "",
                "enchantments": "Enchantments to apply to this item",
                "item": "The item to use or show",
                "material": "The material to use",
                "replace_item": "",
                "return_on_finish": "",
                "slot": "",
                "temporary": "",
                "unbreakable": "Blocks created or modified by this spell will be unbreakable",
                "use_item": ""
            },
            "short_class": "Equip"
        },
        "explosion": {
            "category": "construction",
            "class_name": "ExplosionAction",
            "description": [
                "Create a vanilla explosion",
                "Due to the exponential fall-off used by vanilla Minecraft for calculating explosion damage to entities, use of this action is discouraged.",
                "Explosions can be easily gamed by wise players in PvP situations once they learn the exact distance to cast from to get the center on top of the target entity."
            ],
            "examples": [
                "boom"
            ],
            "importance": 0,
            "name": "Explosion",
            "parameters": {
                "break_blocks": "",
                "fire": "",
                "size": "Size of the effect"
            },
            "short_class": "Explosion"
        },
        "fake_block": {
            "category": "",
            "class_name": "FakeBlockAction",
            "description": [
                "Send block create packets to all players in range",
                "This creates the illusion of blocks client-side without actually changing the world"
            ],
            "examples": [],
            "importance": 0,
            "name": "Fake Block",
            "parameters": {
                "player_radius": ""
            },
            "short_class": "FakeBlock"
        },
        "fall_protection": {
            "category": "entity",
            "class_name": "FallProtectionAction",
            "description": [
                "Apply protection from falling to a target entity for a period of time."
            ],
            "examples": [
                "fling"
            ],
            "importance": 30,
            "name": "Fall Protection",
            "parameters": {
                "duration": "How long an effect or spell should last, in milliseconds",
                "protection_count": ""
            },
            "short_class": "FallProtection"
        },
        "feed": {
            "category": "player",
            "class_name": "FeedAction",
            "description": [
                "Fill the target's hunger bars"
            ],
            "examples": [
                "cure",
                "eat_food"
            ],
            "importance": 20,
            "name": "Feed",
            "parameters": {
                "exhaustion": "",
                "feed": "",
                "food_level": "",
                "saturation": ""
            },
            "short_class": "Feed"
        },
        "fill_wand": {
            "category": "player",
            "class_name": "FillWandAction",
            "description": [
                "Fills a wand with all available spells"
            ],
            "examples": [
                "fillwand"
            ],
            "importance": 0,
            "name": "Fill Wand",
            "parameters": {
                "max_level": ""
            },
            "short_class": "FillWand"
        },
        "find_magic_blocks": {
            "category": "compound",
            "class_name": "FindMagicBlocksAction",
            "description": [
                "Target specific magic blocks in an area"
            ],
            "examples": [],
            "importance": 0,
            "name": "Find Magic Blocks",
            "parameters": {
                "radius": "The radius of this sphere or circle, in blocks",
                "target_all_worlds": "",
                "target_block_mage": "",
                "target_count": "",
                "target_magic_blocks": ""
            },
            "short_class": "FindMagicBlocks"
        },
        "find_tile_entities": {
            "category": "compound",
            "class_name": "FindTileEntitiesAction",
            "description": [
                ""
            ],
            "examples": [],
            "importance": 0,
            "name": "Find Tile Entities",
            "parameters": {
                "radius": "The radius of this sphere or circle, in blocks",
                "target_count": ""
            },
            "short_class": "FindTileEntities"
        },
        "firework": {
            "category": "compound",
            "class_name": "FireworkAction",
            "description": [
                "Launch a vanilla firework",
                "Can work like a projectile, running actions when the firework explodes."
            ],
            "examples": [
                "stun"
            ],
            "importance": 10,
            "name": "Firework",
            "parameters": {
                "color": "Can be used to color particles and firework effects",
                "color2": "A secondary color for an effect\\nThis is used in firework effects as the secondary color",
                "dy_offset": "",
                "expected_lifespan": "Used to control the expected lifespan of the firework, possibly detonating it early",
                "firework": "",
                "flicker": "",
                "hit_effects": "An effect key, specifying which effects to play when the projectile hits",
                "launch": "",
                "lifetime": "The time, in milliseconds, that the entity\/projectile lasts for",
                "power": "",
                "projectile_effects": "An effect key, specifying effects to use to attach to the projectile",
                "projectile_effects_use_target": "Set to true to use the projectile location as the target location (instead of the source) for projectile effects",
                "set_target": "Whether to set the entity or block as the target when spawned",
                "silent": "The silent flag of the mob, to prevent it from making any sounds",
                "spawn": "Actions performed immediately after spawning the entity or projectile",
                "speed": "",
                "start": "",
                "tick": "Actions performed on a every tick while a projectile is in flight",
                "ticks_flown": "",
                "track_projectile": "",
                "trail": "",
                "use_wand_color": "Set to false to avoid using the wand color for effects"
            },
            "short_class": "Firework"
        },
        "flower": {
            "category": "construction",
            "class_name": "FlowerAction",
            "description": [
                "Grow flowers",
                "Can randomly select flowers from a probability map"
            ],
            "examples": [
                "pollinate"
            ],
            "importance": 0,
            "name": "Flower",
            "parameters": {
                "flowers": "",
                "grow_on": "",
                "tall_flowers": ""
            },
            "short_class": "Flower"
        },
        "fly": {
            "category": "",
            "class_name": "FlyAction",
            "description": [
                "Put the target player into creative mode fly"
            ],
            "examples": [
                "levitate",
                "superfly"
            ],
            "importance": 20,
            "name": "Fly",
            "parameters": {
                "duration": "How long an effect or spell should last, in milliseconds",
                "max_height": "",
                "max_height_above_ground": "",
                "speed": ""
            },
            "short_class": "Fly"
        },
        "freeze": {
            "category": "construction",
            "class_name": "FreezeAction",
            "description": [
                "Freeze a block",
                "Turns air blocks into snow, increases height of snow blocks, turns water into ice and lava into stone, and puts out fires."
            ],
            "examples": [
                "frost"
            ],
            "importance": 50,
            "name": "Freeze",
            "parameters": {
                "freeze_fire": "",
                "freeze_lava": "",
                "freeze_water": "",
                "ice": "The material to use when freezing water into ice",
                "pile_snow": "",
                "snowable": ""
            },
            "short_class": "Freeze"
        },
        "give_currency": {
            "category": "",
            "class_name": "GiveCurrencyAction",
            "description": [
                ""
            ],
            "examples": [],
            "importance": 0,
            "name": "Give Currency",
            "parameters": {
                "amount": "The amount of an item",
                "currency": ""
            },
            "short_class": "GiveCurrency"
        },
        "give_item": {
            "category": "player",
            "class_name": "GiveItemAction",
            "description": [
                "Give an item directly to a player"
            ],
            "examples": [
                "giveitem"
            ],
            "importance": 0,
            "name": "Give Item",
            "parameters": {
                "item": "The item to use or show",
                "item_count": "",
                "max_item_count": "",
                "permission": "",
                "requires": "",
                "stack_size": ""
            },
            "short_class": "GiveItem"
        },
        "give_kit": {
            "category": "",
            "class_name": "GiveKitAction",
            "description": [
                "Give the target player a specific kit"
            ],
            "examples": [],
            "importance": 0,
            "name": "Give Kit",
            "parameters": {
                "kit": ""
            },
            "short_class": "GiveKit"
        },
        "glide": {
            "category": "entity",
            "class_name": "GlideAction",
            "description": [
                "Force a player to glide",
                "Does not necessarily require that the player is wearing an elytra"
            ],
            "examples": [
                "glide"
            ],
            "importance": 20,
            "name": "Glide",
            "parameters": {
                "require_elytra": "",
                "wait_for_landing": "If the actions after glide should be performed when the player lands"
            },
            "short_class": "Glide"
        },
        "grow_entity": {
            "category": "entity",
            "class_name": "GrowEntityAction",
            "description": [
                "Turn baby entities into adults, zombies into giants, and optionally skeletons into wither skeletons"
            ],
            "examples": [
                "grow"
            ],
            "importance": 0,
            "name": "Grow Entity",
            "parameters": {
                "skeletons": ""
            },
            "short_class": "GrowEntity"
        },
        "heal": {
            "category": "entity",
            "class_name": "HealAction",
            "description": [
                "Restore an entity's health.",
                "Can restore a specific amount of health, or a percentage of max health"
            ],
            "examples": [
                "heal"
            ],
            "importance": 90,
            "name": "Heal",
            "parameters": {
                "amount": "The amount of health to heal. One heart is equal to 2 health",
                "heal_max_distance": "Set this to scale the amount of health healed linearly with the distance to the source\\nThis can be used with an AreaOfEffect to heal targets more the closer they were to the cast target\\nSet this to the maximum distance, at which the heal amount will drop off to zero",
                "percentage": ""
            },
            "short_class": "Heal"
        },
        "ignite": {
            "category": "entity",
            "class_name": "IgniteAction",
            "description": [
                "Light an entity on fire, or put out a fire"
            ],
            "examples": [
                "arrow_fire",
                "extinguish"
            ],
            "importance": 70,
            "name": "Ignite",
            "parameters": {
                "duration": "How long an effect or spell should last, in milliseconds"
            },
            "short_class": "Ignite"
        },
        "interval": {
            "category": "compound",
            "class_name": "IntervalAction",
            "description": [
                "Repeat actions for a specific amount of time",
                "Has a configurable interval, defaulting to every tick"
            ],
            "examples": [],
            "importance": 0,
            "name": "Interval",
            "parameters": {
                "duration": "How long an effect or spell should last, in milliseconds",
                "interval": "How often to update the projectile location"
            },
            "short_class": "Interval"
        },
        "inventory": {
            "category": "player",
            "class_name": "InventoryAction",
            "description": [
                "Show a player a specific inventory",
                "Can be used to view the player's ender chest, show them a disposable chest inventory, or the inventory of the target container"
            ],
            "examples": [
                "disposal",
                "snoop",
                "stash"
            ],
            "importance": 40,
            "name": "Inventory",
            "parameters": {
                "title": "",
                "type": "The type of entity to spawn"
            },
            "short_class": "Inventory"
        },
        "inventory_close": {
            "category": "player",
            "class_name": "InventoryCloseAction",
            "description": [
                "Close the target player's inventory"
            ],
            "examples": [],
            "importance": 0,
            "name": "Inventory Close",
            "parameters": [],
            "short_class": "InventoryClose"
        },
        "item_shop": {
            "category": "player",
            "class_name": "ItemShopAction",
            "description": [
                "Create a GUI shop that can sell vanilla or magic items",
                "The shop is also capable of casting spells on players"
            ],
            "examples": [],
            "importance": 0,
            "name": "Item Shop",
            "parameters": {
                "apply_to_caster": "",
                "apply_to_wand": "Whether the purchased item should apply directly to the player's wand",
                "auto_close": "",
                "auto_upgrade": "",
                "cast_spells": "",
                "confirm": "",
                "confirm_filler": "",
                "filter_bound": "",
                "items": "The items to display",
                "path": "A progression path that a wand will follow\\nWhen enchanting or using the spellshop, a path will determine what spells are available to a player\\nPaths may upgrade to other paths in a progression, when a player learns all of the spells available on their current path they will progress to the next.",
                "path_end": "",
                "path_exact": "",
                "permission": "",
                "put_in_hand": "",
                "require_template": "",
                "require_wand": "",
                "scale": "Can be used to scale all costs for a shop up and down",
                "sell": "True to make this a sell shop, where players earn money by selling items",
                "show_active_icons": "",
                "upgrade_levels": "",
                "use_items": "",
                "use_sp": "",
                "use_xp": "",
                "worth_item": ""
            },
            "short_class": "ItemShop"
        },
        "kill": {
            "category": "entity",
            "class_name": "KillAction",
            "description": [
                "Kill the target entity",
                "Deals 100 x the entity's max health in damage, just to be safe."
            ],
            "examples": [
                "kill"
            ],
            "importance": 30,
            "name": "Kill",
            "parameters": {
                "magic_damage": "Determines whether or not to use \"magic\" (thrown potion) damage versus normal damage.\\nMagic damage ignores armor, and is the default for damaging spells- set this to false if you wish armor to protect from spell damage."
            },
            "short_class": "Kill"
        },
        "ledger": {
            "category": "",
            "class_name": "LedgerAction",
            "description": [
                "Create a dynamic ledger from a book wand, which will show a player's balances"
            ],
            "examples": [
                "ledger"
            ],
            "importance": 0,
            "name": "Ledger",
            "parameters": {
                "ignore_currencies": "A list of currency types to ignore",
                "show_currencies": "A list of currencies to show, if omitted will show all"
            },
            "short_class": "Ledger"
        },
        "light": {
            "category": "construction",
            "class_name": "LightAction",
            "description": [
                "Modify the light level of the target block",
                "Requires the LightAPI plugin",
                "Do to issues with LightAPI, lighting changes do not reliably undo!"
            ],
            "examples": [
                "light"
            ],
            "importance": 0,
            "name": "Light",
            "parameters": {
                "async": "",
                "level": "",
                "min_distance": "",
                "undo_previous": "",
                "update": ""
            },
            "short_class": "Light"
        },
        "lightning": {
            "category": "entity",
            "class_name": "LightningAction",
            "description": [
                "Strike lighting at the target",
                "Can spawn a fully active lightning bolt, or just the visual effect"
            ],
            "examples": [
                "lightning",
                "smite"
            ],
            "importance": 10,
            "name": "Lightning",
            "parameters": {
                "effect_only": ""
            },
            "short_class": "Lightning"
        },
        "line": {
            "category": "compound",
            "class_name": "LineAction",
            "description": [
                "Target all blocks along a single line"
            ],
            "examples": [
                "iterate",
                "laser",
                "lava",
                "line"
            ],
            "importance": 40,
            "name": "Line",
            "parameters": {
                "increment_data": "Increment the data value of blocks while iterating\\nThis can be used with water or lava to taper the blocks off, lowering their height each iteration",
                "reorient": "",
                "require_block": "",
                "reverse": "",
                "size": "Size of the effect",
                "start": "",
                "start_at_target": ""
            },
            "short_class": "Line"
        },
        "lock": {
            "category": "Construction",
            "class_name": "LockAction",
            "description": [
                "Apply a vanilla lock to a container",
                "Will give the caster a key item they may use to unlock the container",
                "The key and lock will use the caster's UUID, the item name is obfuscated with the enchantment text decoration",
                "Can also be used to unlock a container"
            ],
            "examples": [
                "lockpick",
                "secure"
            ],
            "importance": 0,
            "name": "Lock",
            "parameters": {
                "key_description": "",
                "key_icon": "",
                "key_name": "",
                "type": "The type of lock action to perform",
                "override": ""
            },
            "short_class": "Lock"
        },
        "lower_block": {
            "category": "",
            "class_name": "LowerBlockAction",
            "description": [
                "Lower a block so that it is within a certain distance of its lowest neighbor"
            ],
            "examples": [
                "flatten"
            ],
            "importance": 10,
            "name": "Lower Block",
            "parameters": {
                "faces": "",
                "slopes": "A probability map of # of blocks to allow between a block and its neighbors",
                "vertical_range": ""
            },
            "short_class": "LowerBlock"
        },
        "message": {
            "category": "player",
            "class_name": "MessageAction",
            "description": [
                "Send a chat, action bar or title message to the target player or caster"
            ],
            "examples": [
                "homing",
                "kill",
                "magichat"
            ],
            "importance": 10,
            "name": "Message",
            "parameters": {
                "dialog_format": "A message key used to look up a template in the messages files\\nThis template is used to format dialog spoken to players\\nYou can use some variables in the template:\\n<li>$speaker: The name of the NPC\\n<li>$line: The line of dialog\\n<li>$target: The name of the player being spoken to",
                "equation": "",
                "fade_in": "The amount of time for a title to fade in.\\n<em>Applies only when \"message_type\" is set to \"title\"<\/em>",
                "fade_out": "The amount of time for a title to fade out.\\n<em>Applies only when \"message_type\" is set to \"title\"<\/em>",
                "message": "The message to send the target.\\nThe following variables can be used in this message: \\n<li>@spell : The name of the spell\\n<li>@p : The name of the caster. Can also use @pn\\n<li>@pd : The display name (nick) of the caster\\n<li>@uuid : The UUID of the caster\\n<li>@world, @x, @y, @z : The location of the caster\\n<li>@t : The name of the target. Can also use @tn\\n<li>@td : The display name (nick) of the target\\n<li>@tuuid : The UUID of the target\\n<li>@tworld, @tx, @ty, @tz : The location of the target",
                "message_key": "",
                "message_target": "Whether or not the message will be sent to the target.\\nIf false, the message will be sent to the caster.",
                "message_type": "What type of message to send",
                "stay": "The amount of time the title will stay visible before transitioning out.\\n<em>Applies only when \"message_type\" is set to \"title\"<\/em>",
                "sub_message": "The smaller, lower message on a title.\\n<em>Applies only when \"message_type\" is set to \"title\"<\/em>",
                "sub_message_key": ""
            },
            "short_class": "Message"
        },
        "model_engine": {
            "category": "",
            "class_name": "ModelEngineAction",
            "description": [
                "Apply ModelEngine models, state or color changes to a mob"
            ],
            "examples": [],
            "importance": 0,
            "name": "Model Engine",
            "parameters": {
                "custom_id": "",
                "ignore_lerp": "",
                "lerp_in": "",
                "lerp_out": "",
                "lerp_speed": "",
                "model_action": "",
                "model_id": "",
                "model_state": "",
                "part_id": "",
                "sub_model_id": "",
                "sub_part_id": ""
            },
            "short_class": "ModelEngine"
        },
        "modifier": {
            "category": "",
            "class_name": "ModifierAction",
            "description": [
                "Add or remove magic modifiers from the target"
            ],
            "examples": [],
            "importance": 0,
            "name": "Modifier",
            "parameters": {
                "add_modifiers": "",
                "duration": "How long an effect or spell should last, in milliseconds",
                "duration_multiplier": "A multiplier to apply to the duration of a spell or effect\\nThis can be used with spell levels or headshot parameters, to make it easy to scale up duration while still being able to tweak the base duration",
                "remove_modifiers": "",
                "remove_on_finish": ""
            },
            "short_class": "Modifier"
        },
        "modify_attribute": {
            "category": "",
            "class_name": "ModifyAttributeAction",
            "description": [
                "Modify magic attributes on the target"
            ],
            "examples": [],
            "importance": 0,
            "name": "Modify Attribute",
            "parameters": {
                "attribute": "",
                "bypass_undo": "This spell will not add its changes to the undo queue and cannot be undo",
                "modify_target": "",
                "original_variable": "",
                "value": ""
            },
            "short_class": "ModifyAttribute"
        },
        "modify_block": {
            "category": "construction",
            "class_name": "ModifyBlockAction",
            "description": [
                "Modify a block by changing its type",
                "Can also be used to spawn falling blocks in the place of a block that was removed",
                "Falling blocks can be given velocity for explosion type block effects"
            ],
            "examples": [
                "blast",
                "collapse"
            ],
            "importance": 100,
            "name": "Modify Block",
            "parameters": {
                "auto_block_state": "",
                "breakable": "",
                "check_chunk": "Whether or not to check the target chunk before modifying blocks",
                "commit": "If changes made by this action should auto-commit, so that they are not undoable",
                "consume": "",
                "consume_variants": "",
                "damage": "How much damage to deal to the target",
                "fall_damage": "",
                "falling": "",
                "falling_hurts": "",
                "falling_probability": "",
                "max_damage": "",
                "physics": "",
                "physics_blocks": "",
                "reflect_chance": "",
                "replace_same": "",
                "speed": ""
            },
            "short_class": "ModifyBlock"
        },
        "modify_breakable": {
            "category": "construction",
            "class_name": "ModifyBreakable",
            "description": [
                "Tag a block as breakable so that other spells can break the block"
            ],
            "examples": [
                "freeze"
            ],
            "importance": 0,
            "name": "Modify Breakable",
            "parameters": {
                "breakable": "",
                "target_air": ""
            },
            "short_class": "ModifyBreakable"
        },
        "modify_compass": {
            "category": "",
            "class_name": "ModifyCompassAction",
            "description": [
                "Modify a compass wand, setting the lodestone target location"
            ],
            "examples": [],
            "importance": 0,
            "name": "Modify Compass",
            "parameters": {
                "tracked": ""
            },
            "short_class": "ModifyCompass"
        },
        "modify_currency": {
            "category": "",
            "class_name": "ModifyCurrencyAction",
            "description": [
                "Add or remove currency to the target player"
            ],
            "examples": [],
            "importance": 0,
            "name": "Modify Currency",
            "parameters": {
                "currency": "",
                "value": ""
            },
            "short_class": "ModifyCurrency"
        },
        "modify_entity": {
            "category": "",
            "class_name": "ModifyEntityAction",
            "description": [
                "Change properties of the target mob"
            ],
            "examples": [],
            "importance": 0,
            "name": "Modify Entity",
            "parameters": {
                "aggro": "This will enable the thread table aggro behavior on an otherwise normal mob\\nThis makes the mob target the player that has done the most damage to to it, within track_range\\nMobs that cast spells or have other mage properties such as protection will automatically use aggro behavior.",
                "ai": "Whether or not this mob has 'AI'. A mob with AI turned off will not move or react, and also can not be pushed by velocity.",
                "angry": "",
                "attributes": "Attributes to apply to the player when holding this wand\\nIf set to passive the attributes will be applied when worn\\nIf set to stack, attributes will add to the player's current attributes",
                "aware": "",
                "baby": "Make this mob a baby mob",
                "boots": "",
                "boss_bar": "",
                "brain": "Vanilla AI behaviors",
                "can_pickup_items": "Whether or not the mob will be allowed to pick up items",
                "cancel_explosion": "",
                "cancel_interact": "",
                "cast": "A probability table of spells to cast\\nThis parameter is deprecated, it is better to use the triggers map",
                "cast_interval": "How often, in milliseconds, to auto-cast the cast_spell set on this wand",
                "cast_requires_item": "An item the mob must be holding in order to cast spells",
                "cast_requires_target": "If true, the mob will only cast spells if it has targeted an entity",
                "chestplate": "",
                "collidable": "",
                "color": "Can be used to color particles and firework effects",
                "combustible": "",
                "default_drops": "Whether this mob should drop default vanilla drops on death",
                "dialog": "A list of speech lines for an NPC to say to nearby players",
                "dialog_face_player": "If set, the NPC will face the player they speak to\\nFacing is not smooth, direction will only change each time they speak\\nIF there are multiple players being spoken to, the NPC will try to look roughly in the center of them",
                "dialog_interval": "How long to wait before speaking each line of dialog",
                "dialog_range": "How close a player must be before the NPC will start speaking to them",
                "direction": "The direction to search",
                "disguise": "A disguise to use\\nrequires the LibsDisguises plugin",
                "disguise_target": "What player to use when disguising\\nThis will copy the target player's skin",
                "docile": "Make this mob avoid targeting other mobs",
                "drop_xp": "Amount of experience a mob should drop on death",
                "drops": "",
                "drops_require_player_killer": "",
                "dy_offset": "",
                "entity_attributes": "Vanilla entity attributes to apply to the mob",
                "equip_on_respawn": "",
                "face_player": "",
                "force": "For upgrade items, this will force all properties in the upgrade template to apply to the target wand, even if they are a downgrade",
                "goals": "A list of pathfinder goals for this mob",
                "gravity": "Whether or not this entity is affected by gravity",
                "health": "Amount of health to heal",
                "helmet": "",
                "hidden": "This spell or wand template will not show up in lists\\nThis is generally used for templates not meant for player use",
                "interact_command_source": "",
                "interact_commands": "",
                "interact_costs": "",
                "interact_permission": "",
                "interact_requires_owner": "",
                "interact_spell": "A spell to cast when a player interacts with (right-clicks on) this mob",
                "interact_spell_parameters": "",
                "interact_spell_source": "",
                "interact_spell_target": "",
                "interval": "How often to update the projectile location",
                "interval_requires_target": "The mob's interval triggers will not fire unless it has a target",
                "invisible": "",
                "invulnerable": "This wand will not take damage from any source, and can not be destroyed",
                "item": "The item to use or show",
                "leash_range": "",
                "leggings": "",
                "lifetime": "The time, in milliseconds, that the entity\/projectile lasts for",
                "loot": "",
                "mage": "Specify properties to get applied to the Mage for this mob\\nThese can be the same sort of properties you would apply to a player class or wand",
                "max_health": "The maximum health this mob or player should have",
                "model": "",
                "modifiers": "",
                "mount": "",
                "mythic_mob": "",
                "mythic_mob_level": "",
                "name": "The display name of this wand or spell to show in-game\\nCan be added directly on the wand or spell config, but it is often better to put all language in the messages.yml file so it can be easily edited and translated.",
                "no_drops": "",
                "npc": "",
                "offhand": "",
                "own": "",
                "ownable": "",
                "owner": "",
                "permissions": "",
                "persist": "",
                "potion_effects": "A map of potion effects to apply to this entity",
                "prevent_dismount": "",
                "prevent_melee": "",
                "prevent_projectiles": "",
                "prevent_teleport": "",
                "protected": "If set, the holder of this wand will be completly invincible and untargetable by all spells\\nMagic.wand.use.protected permission to use",
                "protection": "Protection from specific damage types",
                "reason": "",
                "register_by_name": "",
                "relentless": "",
                "remove_mounts": "",
                "remove_when_far_away": "",
                "show_name": "Whether to show the entity's name",
                "silent": "The silent flag of the mob, to prevent it from making any sounds",
                "sitting": "",
                "speed": "",
                "static": "",
                "stay": "",
                "strength": "Gives damage bonuses to specific damage types",
                "tags": "",
                "tamed": "Set to true to make this mob tamed",
                "targeting": "",
                "temporary": "",
                "track_radius": "How far away a player must get before this mob no longer chases it",
                "transformable": "",
                "triggers": "",
                "type": "The type of entity to spawn",
                "use_npc_name": "",
                "weakness": "Weakness to specific damage types",
                "xp": "Amount of experience contained in an experiene orb entity"
            },
            "short_class": "ModifyEntity"
        },
        "modify_game_mode": {
            "category": "player",
            "class_name": "ModifyGameModeAction",
            "description": [
                "Change the player's game mode"
            ],
            "examples": [
                "gamemodechange"
            ],
            "importance": 0,
            "name": "Modify Game Mode",
            "parameters": {
                "game_mode": ""
            },
            "short_class": "ModifyGameMode"
        },
        "modify_lore": {
            "category": "",
            "class_name": "ModifyLoreAction",
            "description": [
                "Modifies the lore of a vanilla item",
                "Can be used to add, subtract or otherwise modify numeric values in lore using regex"
            ],
            "examples": [],
            "importance": 0,
            "name": "Modify Lore",
            "parameters": {
                "digits": "The number of digits past the decimal point to include in the numeric output",
                "modify": ""
            },
            "short_class": "ModifyLore"
        },
        "modify_mage": {
            "category": "player",
            "class_name": "ModifyMageAction",
            "description": [
                "Can be used to lock, unlock or activate a player's mage classes"
            ],
            "examples": [],
            "importance": 0,
            "name": "Modify Mage",
            "parameters": {
                "mage_class": "A mage class as defined in classes.yml, or one of the example configs",
                "modify_type": "Determine what to do with the player's classes"
            },
            "short_class": "ModifyMage"
        },
        "modify_mana": {
            "category": "player",
            "class_name": "ModifyManaAction",
            "description": [
                "Add or remove mana from a player or wand"
            ],
            "examples": [],
            "importance": 10,
            "name": "Modify Mana",
            "parameters": {
                "fill_mana": "",
                "mana": "The amount of mana this wand currently has\\nCan be used in a configuration to make a wand start out with mana, rather than waiting to regenerate"
            },
            "short_class": "ModifyMana"
        },
        "modify_max_health": {
            "category": "entity",
            "class_name": "ModifyMaxHealthAction",
            "description": [
                "Modify the maximum health of the target entity.",
                "This change is permanent!"
            ],
            "examples": [],
            "importance": 0,
            "name": "Modify Max Health",
            "parameters": {
                "health_scale": "The scale to use when translating health to UI hearts",
                "max_health": "The maximum health this mob or player should have"
            },
            "short_class": "ModifyMaxHealth"
        },
        "modify_n_p_c": {
            "category": "",
            "class_name": "ModifyNPCAction",
            "description": [
                "Modify the target NPC",
                "This is used by the shop management tool",
                "Requires a specific NPC id and is not currently very usable in general spells"
            ],
            "examples": [],
            "importance": 0,
            "name": "Modify NPC",
            "parameters": {
                "name": "The display name of this wand or spell to show in-game\\nCan be added directly on the wand or spell config, but it is often better to put all language in the messages.yml file so it can be easily edited and translated.",
                "name_from_wand": "",
                "npc_id": "",
                "npc_parameters": "",
                "npc_template": ""
            },
            "short_class": "ModifyNPC"
        },
        "modify_no_damage_ticks": {
            "category": "",
            "class_name": "ModifyNoDamageTicksAction",
            "description": [
                "Clear or set the vanilla damage cooldown on the target mob"
            ],
            "examples": [],
            "importance": 0,
            "name": "Modify No Damage Ticks",
            "parameters": {
                "no_damage_ticks": ""
            },
            "short_class": "ModifyNoDamageTicks"
        },
        "modify_parameters": {
            "category": "compound",
            "class_name": "ModifyParametersAction",
            "description": [
                "Modify the base parameters of the spell mid-cast"
            ],
            "examples": [],
            "importance": 0,
            "name": "Modify Parameters",
            "parameters": [],
            "short_class": "ModifyParameters"
        },
        "modify_properties": {
            "category": "player",
            "class_name": "ModifyPropertiesAction",
            "description": [
                "Modify the properties of a player or wand"
            ],
            "examples": [
                "wandbuffs"
            ],
            "importance": 10,
            "name": "Modify Properties",
            "parameters": {
                "bypass_undo": "This spell will not add its changes to the undo queue and cannot be undo",
                "modify": "",
                "modify_target": "",
                "original_variable": "",
                "upgrade": ""
            },
            "short_class": "ModifyProperties"
        },
        "modify_reflective": {
            "category": "construction",
            "class_name": "ModifyReflectiveAction",
            "description": [
                "Change a block so that it will reflect spells"
            ],
            "examples": [],
            "importance": 0,
            "name": "Modify Reflective",
            "parameters": {
                "reflect_chance": ""
            },
            "short_class": "ModifyReflective"
        },
        "modify_s_p": {
            "category": "player",
            "class_name": "ModifySPAction",
            "description": [
                "Add or remove Spell Points"
            ],
            "examples": [
                "addsp"
            ],
            "importance": 0,
            "name": "Modify SP",
            "parameters": {
                "sp": ""
            },
            "short_class": "ModifySP"
        },
        "modify_variable": {
            "category": "",
            "class_name": "ModifyVariableAction",
            "description": [
                "Set or change a variable that can be used elsewhere in this spell"
            ],
            "examples": [],
            "importance": 0,
            "name": "Modify Variable",
            "parameters": {
                "clear": "",
                "scope": "",
                "value": "The value to set the variable to",
                "variable": ""
            },
            "short_class": "ModifyVariable"
        },
        "modify_walk_speed": {
            "category": "player",
            "class_name": "ModifyWalkSpeed",
            "description": [
                "Modify the walk speed attribute of the target"
            ],
            "examples": [],
            "importance": 0,
            "name": "Modify Walk Speed",
            "parameters": {
                "speed": ""
            },
            "short_class": "ModifyWalkSpeed"
        },
        "mount": {
            "category": "entity",
            "class_name": "MountAction",
            "description": [
                "Force the caster to mount the target entity"
            ],
            "examples": [
                "boomstown",
                "horse",
                "mount"
            ],
            "importance": 0,
            "name": "Mount",
            "parameters": {
                "dismount": "If set, will dismount the target from their vehicle",
                "eject": ""
            },
            "short_class": "Mount"
        },
        "mount_armor_stand": {
            "category": "player",
            "class_name": "MountArmorStandAction",
            "description": [
                "Mount an armor stand, optionally creating and removing the armor stand",
                "This is the action that powers broomsticks and other vehicles",
                "Using custom resource pack models, this can be used to implement driveable cars, planes or just about anything by applying velocity to the armor stand when mounted",
                "It has many parameters for handling crashing, hovering, and other options"
            ],
            "examples": [
                "airscooter",
                "broom"
            ],
            "importance": 30,
            "name": "Mount Armor Stand",
            "parameters": {
                "air_controllable": "",
                "armor_stand_gravity": "",
                "armor_stand_health": "Set the health of the armor stand, which will show in the player's UI while mounted",
                "armor_stand_invisible": "",
                "armor_stand_invulnerable": "",
                "armor_stand_marker": "",
                "armor_stand_pitch": "",
                "armor_stand_reason": "",
                "armor_stand_roll": "",
                "armor_stand_small": "",
                "boost_attribute": "",
                "braking": "",
                "controllable": "",
                "crash_braking": "",
                "crash_damage": "",
                "crash_dismount_speed": "",
                "crash_distance": "",
                "crash_effects": "",
                "crash_entity_damage": "",
                "crash_entity_distance": "",
                "crash_entity_fov": "",
                "crash_entity_vehicle_damage": "",
                "crash_into": "",
                "crash_speed": "",
                "crash_vehicle_damage": "",
                "crash_velocity": "",
                "crash_velocity_y_offset": "",
                "direction_y": "An offset to apply to the vertical component of movement",
                "dismount_height": "",
                "duration": "How long an effect or spell should last, in milliseconds",
                "duration_warning": "",
                "exemption_duration": "",
                "fall_protection": "",
                "find_wand": "",
                "gravity": "The gravity the projectile has, starts from 0",
                "height_check_radius": "",
                "helmet_item": "",
                "jump_cast": "A spell to cast while the player is riding and presses the spacebar",
                "jump_controllable": "An amount of velocity to apply to this mount when the rider presses the jump key (space bar by default)",
                "jump_velocity": "",
                "liftoff_duration": "",
                "liftoff_thrust": "",
                "max_acceleration": "",
                "max_ascend": "",
                "max_deceleration": "",
                "max_height": "",
                "max_height_above_ground": "",
                "max_speed": "",
                "min_speed": "",
                "mount_name": "",
                "mount_no_drops": "",
                "mount_target": "",
                "mount_untargetable": "",
                "mount_wand": "",
                "passenger": "",
                "pitch_controllable": "",
                "pitch_offset": "An offset to apply to the pitch of the source direction",
                "replacement_item": "",
                "rider_untargetable": "",
                "riding_effects": "",
                "sneak_controllable": "",
                "sound": "A sound effect to play. Can be a vanilla sound or a custom sound from a resource pack.",
                "sound_interval": "",
                "sound_max_pitch": "",
                "sound_max_volume": "",
                "sound_min_pitch": "",
                "sound_min_volume": "",
                "sound_pitch": "The pitch of a sound effect.\\nValues greater than 1 will increase pitch, values less than 1 will lower pitch.",
                "sound_volume": "",
                "start_speed": "",
                "steer_controllable": "",
                "steer_speed": "",
                "strafe_controllable": "",
                "terminal_velocity": "",
                "warning_effects": "",
                "yaw_offset": "An offset to apply to the yaw of the source direction"
            },
            "short_class": "MountArmorStand"
        },
        "move_block": {
            "category": "constructoin",
            "class_name": "MoveBlockAction",
            "description": [
                "Move a block from one location to another"
            ],
            "examples": [
                "lift"
            ],
            "importance": 0,
            "name": "Move Block",
            "parameters": {
                "clear_target": "",
                "offset": "Offset the original location",
                "set_target": "Whether to set the entity or block as the target when spawned"
            },
            "short_class": "MoveBlock"
        },
        "multiply": {
            "category": "compound",
            "class_name": "MultiplyAction",
            "description": [
                "Repeat a set of actions mulitple times in parallel",
                "Will fall back to using the 'repeat' parameter if 'multiply' is not specified"
            ],
            "examples": [
                "bomb",
                "cluster",
                "meteor",
                "volley"
            ],
            "importance": 60,
            "name": "Multiply",
            "parameters": {
                "multiply": "",
                "repeat": ""
            },
            "short_class": "Multiply"
        },
        "orient": {
            "category": "entity",
            "class_name": "OrientAction",
            "description": [
                "Force the target entity to face a specific direction"
            ],
            "examples": [
                "tracking"
            ],
            "importance": 10,
            "name": "Orient",
            "parameters": {
                "orient_target": "If true, the target will be oriented instead of the caster",
                "pitch": "Specify the pitch of the source direction",
                "pitch_offset": "An offset to apply to the pitch of the source direction",
                "target_block": "",
                "yaw": "Specify the yaw of the source direction",
                "yaw_offset": "An offset to apply to the yaw of the source direction"
            },
            "short_class": "Orient"
        },
        "parallel": {
            "category": "compound",
            "class_name": "ParallelAction",
            "description": [
                "Runs each action in the list of sub-actions in parallel, rather than sequentially"
            ],
            "examples": [
                "earthquake",
                "nuke"
            ],
            "importance": 30,
            "name": "Parallel",
            "parameters": [],
            "short_class": "Parallel"
        },
        "plane": {
            "category": "compound",
            "class_name": "PlaneAction",
            "description": [
                "Target all blocks in a 2D plane"
            ],
            "examples": [],
            "importance": 0,
            "name": "Plane",
            "parameters": {
                "axis": "",
                "brush_axis": "",
                "center_probability": "",
                "center_x": "",
                "center_y": "",
                "center_z": "",
                "check_chunk": "Whether or not to check the target chunk before modifying blocks",
                "orient": "",
                "orient_pitch": "",
                "orient_pitch_snap": "",
                "orient_snap": "",
                "outer_probability": "",
                "probability": "",
                "radius": "The radius of this sphere or circle, in blocks",
                "radius_padding": "",
                "reorient": "",
                "replace": "",
                "thickness": "",
                "use_brush_size": "",
                "volume_type": "",
                "x_size": "Size along the x axis",
                "y_size": "Size along the y axis",
                "z_size": "Size along the z axis"
            },
            "short_class": "Plane"
        },
        "play_effects": {
            "category": "player",
            "class_name": "PlayEffectsAction",
            "description": [
                "Play a specific set of effects from the spell's effects list"
            ],
            "examples": [
                "disintegrate",
                "fxdemo",
                "holylight",
                "laser",
                "nuke"
            ],
            "importance": 80,
            "name": "Play Effects",
            "parameters": {
                "effect": "The key of an effects blocks to play",
                "effects": "Which effects to play",
                "effects_count_as_cast": ""
            },
            "short_class": "PlayEffects"
        },
        "play_record": {
            "category": "player",
            "class_name": "PlayRecordAction",
            "description": [
                "Play music from a vanilla record disc to the target player"
            ],
            "examples": [
                "music"
            ],
            "importance": 0,
            "name": "Play Record",
            "parameters": {
                "records": ""
            },
            "short_class": "PlayRecord"
        },
        "play_sound": {
            "category": "player",
            "class_name": "PlaySoundAction",
            "description": [
                "Play a sound to the target player",
                "Can be used with vanilla sounds or custom sounds from a resource pack"
            ],
            "examples": [
                "flashbang",
                "music_notes"
            ],
            "importance": 80,
            "name": "Play Sound",
            "parameters": {
                "effects_count_as_cast": "",
                "pitch": "Specify the pitch of the source direction",
                "radius": "The radius of this sphere or circle, in blocks",
                "sound": "A sound effect to play. Can be a vanilla sound or a custom sound from a resource pack.",
                "sound_pitch": "The pitch of a sound effect.\\nValues greater than 1 will increase pitch, values less than 1 will lower pitch.",
                "sound_volume": "",
                "sounds_count_as_cast": "",
                "volume": ""
            },
            "short_class": "PlaySound"
        },
        "player_select": {
            "category": "compound",
            "class_name": "PlayerSelectAction",
            "description": [
                "Show the caster a GUI with heads for all players on the server, allowing them to choose a player who will be the target of the sub-action list"
            ],
            "examples": [
                "gather"
            ],
            "importance": 0,
            "name": "Player Select",
            "parameters": {
                "cross_world": "",
                "ignore_key": "",
                "name_template": "",
                "title_key": ""
            },
            "short_class": "PlayerSelect"
        },
        "potion_effect": {
            "category": "entity",
            "class_name": "PotionEffectAction",
            "description": [
                "Apply or remove vanilla potion effects from the target"
            ],
            "examples": [
                "arrow_poison",
                "blessing",
                "cure",
                "curse",
                "frost",
                "poison",
                "wither"
            ],
            "importance": 100,
            "name": "Potion Effect",
            "parameters": {
                "add_effects": "A map of potion effects to add to the target",
                "amplifier": "",
                "duration": "How long an effect or spell should last, in milliseconds",
                "duration_multiplier": "A multiplier to apply to the duration of a spell or effect\\nThis can be used with spell levels or headshot parameters, to make it easy to scale up duration while still being able to tweak the base duration",
                "effects_ambient": "If true, the particles produced by these potion effects will be 'ambient', meaning slightly transparent and less noticable",
                "effects_particles": "If false, the potion effects applied will not show as bubble particles",
                "potion_effects": "A map of potion effects to apply to this entity",
                "remove_effects": "A list of potion effects to remove from the target",
                "remove_on_finish": ""
            },
            "short_class": "PotionEffect"
        },
        "power_block": {
            "category": "construction",
            "class_name": "PowerBlockAction",
            "description": [
                "Change the state of redstone blocks such as levers and buttons"
            ],
            "examples": [
                "emp"
            ],
            "importance": 0,
            "name": "Power Block",
            "parameters": {
                "physics": ""
            },
            "short_class": "PowerBlock"
        },
        "probability": {
            "category": "compound",
            "class_name": "ProbabilityAction",
            "description": [
                "Execute or skip sub-actions based on a random chance"
            ],
            "examples": [],
            "importance": 30,
            "name": "Probability",
            "parameters": {
                "fail": "Actions to run on fail instead of success",
                "invert": "Invert the text",
                "probability": "",
                "timeout": ""
            },
            "short_class": "Probability"
        },
        "projectile": {
            "category": "compound",
            "class_name": "ProjectileAction",
            "description": [
                "Launch a vanilla projectile"
            ],
            "examples": [
                "arrow",
                "arrowrain",
                "dragonball",
                "fireball",
                "wither"
            ],
            "importance": 100,
            "name": "Projectile",
            "parameters": {
                "arrow_damage": "",
                "break_blocks": "",
                "color": "Can be used to color particles and firework effects",
                "count": "",
                "damage": "How much damage to deal to the target",
                "fire": "",
                "hit_effects": "An effect key, specifying which effects to play when the projectile hits",
                "lifetime": "The time, in milliseconds, that the entity\/projectile lasts for",
                "orient": "",
                "pickup": "",
                "projectile": "What type of projectile to launch",
                "projectile_effects": "An effect key, specifying effects to use to attach to the projectile",
                "projectile_effects_use_target": "Set to true to use the projectile location as the target location (instead of the source) for projectile effects",
                "reorient": "",
                "set_target": "Whether to set the entity or block as the target when spawned",
                "size": "Size of the effect",
                "source_location": "",
                "spawn": "Actions performed immediately after spawning the entity or projectile",
                "speed": "",
                "spread": "",
                "start": "",
                "tick": "Actions performed on a every tick while a projectile is in flight",
                "tick_increase": "",
                "track_projectile": "",
                "use_block_location": "",
                "use_cast_location": "",
                "use_eye_location": "",
                "use_hit_location": "",
                "use_target_location": "",
                "use_wand_location": ""
            },
            "short_class": "Projectile"
        },
        "raise_block": {
            "category": "construction",
            "class_name": "RaiseBlockAction",
            "description": [
                "Raise a block up so that it is near its highest neighbor"
            ],
            "examples": [
                "raise"
            ],
            "importance": 20,
            "name": "Raise Block",
            "parameters": {
                "consume": "",
                "consume_variants": "",
                "faces": "",
                "max_height": "",
                "slopes": "A probability map of # of blocks to allow between a block and its neighbors",
                "vertical_range": ""
            },
            "short_class": "RaiseBlock"
        },
        "random": {
            "category": "compound",
            "class_name": "RandomAction",
            "description": [
                "Randomly choose one from the set of sub-actions to execute"
            ],
            "examples": [
                "magichat"
            ],
            "importance": 30,
            "name": "Random",
            "parameters": [],
            "short_class": "Random"
        },
        "recall": {
            "category": "player",
            "class_name": "RecallAction",
            "description": [
                "Show a customizeable GUI of warps and other locations",
                "Can be used with warps created by Essentials or CommandBook"
            ],
            "examples": [
                "recall"
            ],
            "importance": 0,
            "name": "Recall",
            "parameters": {
                "allow_cross_world": "",
                "delay": "Delay to wait before continuing, in milliseconds",
                "friend_key": "",
                "keep_velocity": "",
                "maintain_direction": "",
                "marker_count": "",
                "marker_key": "Where in player data should their marker location be saved\\nCan be used to have different spells track different marker locations",
                "marker_maintain_direction": "",
                "prevent_fall": "",
                "protection_duration": "",
                "require_build": "",
                "require_exit": "",
                "require_target_permission": "",
                "safe": "",
                "teleport": "",
                "teleport_target": "",
                "teleport_vehicle": "",
                "title_key": "",
                "unlock_key": "",
                "vertical_range": "",
                "warmup": "An alias for the 'delay' parameter of the Delay action, a delay in milliseconds\\nIf present this will be shown in lore as the spells' warmup time"
            },
            "short_class": "Recall"
        },
        "recurse": {
            "category": "compound",
            "class_name": "RecurseAction",
            "description": [
                "Recursively follows blocks that match the spell's destructible list",
                "Can be configured to only follow a specific list of block faces, such as only filling downward"
            ],
            "examples": [
                "chop",
                "floodfill",
                "mine",
                "recurse",
                "rubberize"
            ],
            "importance": 30,
            "name": "Recurse",
            "parameters": {
                "checkered": "",
                "debug_depth": "Used for debugging the algorithm",
                "debug_material": "Used for debugging the algorithm",
                "depth": "",
                "depth_first": "Set to perform a depth-first recursion rather than breadth-first",
                "faces": "",
                "limit": "",
                "maxdepth": "",
                "priority_faces": "",
                "replace": "",
                "size": "Size of the effect"
            },
            "short_class": "Recurse"
        },
        "remove_entity": {
            "category": "entity",
            "class_name": "RemoveEntityAction",
            "description": [
                "Remove an entity from the world completely, without killing it or having it drop loot"
            ],
            "examples": [],
            "importance": 0,
            "name": "Remove Entity",
            "parameters": {
                "ignore_invalid": ""
            },
            "short_class": "RemoveEntity"
        },
        "remove_n_p_c": {
            "category": "",
            "class_name": "RemoveNPCAction",
            "description": [
                "Remove a specific NPC",
                "Requires an NPC id"
            ],
            "examples": [],
            "importance": 0,
            "name": "Remove NPC",
            "parameters": {
                "npc_id": ""
            },
            "short_class": "RemoveNPC"
        },
        "remove_spell": {
            "category": "",
            "class_name": "RemoveSpellAction",
            "description": [
                "Remove (unlearn) a spell from the target player"
            ],
            "examples": [],
            "importance": 0,
            "name": "Remove Spell",
            "parameters": {
                "spell": "The spell to cast"
            },
            "short_class": "RemoveSpell"
        },
        "remove_wand": {
            "category": "",
            "class_name": "RemoveWandAction",
            "description": [
                "Delete the wand of the target player, is not undoable"
            ],
            "examples": [],
            "importance": 0,
            "name": "Remove Wand",
            "parameters": [],
            "short_class": "RemoveWand"
        },
        "repair_item": {
            "category": "player",
            "class_name": "RepairItemAction",
            "description": [
                "Repair the target item, or items in the target player's inventory"
            ],
            "examples": [
                "repairequipment",
                "repairitem"
            ],
            "importance": 0,
            "name": "Repair Item",
            "parameters": {
                "armor": "",
                "held_item": ""
            },
            "short_class": "RepairItem"
        },
        "repeat": {
            "category": "compound",
            "class_name": "RepeatAction",
            "description": [
                "Repeat sub-actions a number of times in sequence"
            ],
            "examples": [
                "forest",
                "grab",
                "lightning",
                "push"
            ],
            "importance": 100,
            "name": "Repeat",
            "parameters": {
                "repeat": ""
            },
            "short_class": "Repeat"
        },
        "reset_mage": {
            "category": "",
            "class_name": "ResetMageAction",
            "description": [
                "Delete magic player data of the target player"
            ],
            "examples": [],
            "importance": 0,
            "name": "Reset Mage",
            "parameters": [],
            "short_class": "ResetMage"
        },
        "respawn": {
            "category": "compound",
            "class_name": "RespawnAction",
            "description": [
                "Cause an NPC or mob to respawn after it has died"
            ],
            "examples": [],
            "importance": 0,
            "name": "Respawn",
            "parameters": [],
            "short_class": "Respawn"
        },
        "retarget": {
            "category": "compound",
            "class_name": "RetargetAction",
            "description": [
                "Performs targeting as normal, passing the new target to its sub-actions"
            ],
            "examples": [
                "gatling",
                "laser"
            ],
            "importance": 60,
            "name": "Retarget",
            "parameters": {
                "close_fov": "",
                "close_range": "",
                "distance_weight": "Tweak how important the distance to the target is when performing targeting",
                "entity_weight": "",
                "fov": "",
                "fov_weight": "",
                "hitbox": "If true, hitbox targeting will be used\\nThis will use the vanilla (or custom) hitboxes of target entities with projectile raycasts for line\/box intersection tests\\nThe exact hit location can be determined and used in effects, and special behavior can be given to headshots",
                "hitbox_block_size": "Can be used to expand a projectile's hitbox when determining block collisions",
                "hitbox_size": "Can be used to expand a projectile's hitbox when determining entity collisions",
                "ignore_blocks": "",
                "npc_weight": "",
                "otdx": "Directional vector override for target source",
                "otdy": "Directional vector override for target source",
                "otdz": "Directional vector override for target source",
                "otworld": "Directional vector override for target source",
                "otx": "Offset for target location, relative to targeted block",
                "oty": "Offset for target location, relative to targeted block",
                "otz": "Offset for target location, relative to targeted block",
                "player_weight": "",
                "range": "How far, in blocks, this spell can reach before counting as a miss\\nThis can apply to a base spell, which will do instant raycast targeting, or to a CustomProjectile which will travel over time until it reaches this distance",
                "range_padding": "",
                "target": "How this spell should perform its targeting\\nThis only affects the initial targeting, not any projectiles that are launched",
                "target_breakable_depth": "",
                "target_min_offset": "",
                "tmo": ""
            },
            "short_class": "Retarget"
        },
        "ride_entity": {
            "category": "player",
            "class_name": "RideEntityAction",
            "description": [
                "Mount and control the target entity",
                "This is the base action for MountArmorStand"
            ],
            "examples": [
                "ride"
            ],
            "importance": 0,
            "name": "Ride Entity",
            "parameters": {
                "air_controllable": "",
                "boost_attribute": "",
                "braking": "",
                "controllable": "",
                "crash_braking": "",
                "crash_damage": "",
                "crash_dismount_speed": "",
                "crash_distance": "",
                "crash_effects": "",
                "crash_entity_damage": "",
                "crash_entity_distance": "",
                "crash_entity_fov": "",
                "crash_entity_vehicle_damage": "",
                "crash_into": "",
                "crash_speed": "",
                "crash_vehicle_damage": "",
                "crash_velocity": "",
                "crash_velocity_y_offset": "",
                "direction_y": "An offset to apply to the vertical component of movement",
                "dismount_height": "",
                "duration": "How long an effect or spell should last, in milliseconds",
                "duration_warning": "",
                "exemption_duration": "",
                "fall_protection": "",
                "gravity": "The gravity the projectile has, starts from 0",
                "height_check_radius": "",
                "jump_cast": "A spell to cast while the player is riding and presses the spacebar",
                "jump_controllable": "An amount of velocity to apply to this mount when the rider presses the jump key (space bar by default)",
                "jump_velocity": "",
                "liftoff_duration": "",
                "liftoff_thrust": "",
                "max_acceleration": "",
                "max_ascend": "",
                "max_deceleration": "",
                "max_height": "",
                "max_height_above_ground": "",
                "max_speed": "",
                "min_speed": "",
                "mount_no_drops": "",
                "mount_untargetable": "",
                "passenger": "",
                "pitch_controllable": "",
                "pitch_offset": "An offset to apply to the pitch of the source direction",
                "rider_untargetable": "",
                "riding_effects": "",
                "sneak_controllable": "",
                "sound": "A sound effect to play. Can be a vanilla sound or a custom sound from a resource pack.",
                "sound_interval": "",
                "sound_max_pitch": "",
                "sound_max_volume": "",
                "sound_min_pitch": "",
                "sound_min_volume": "",
                "sound_pitch": "The pitch of a sound effect.\\nValues greater than 1 will increase pitch, values less than 1 will lower pitch.",
                "sound_volume": "",
                "start_speed": "",
                "steer_controllable": "",
                "steer_speed": "",
                "strafe_controllable": "",
                "terminal_velocity": "",
                "warning_effects": "",
                "yaw_offset": "An offset to apply to the yaw of the source direction"
            },
            "short_class": "RideEntity"
        },
        "ring": {
            "category": "compound",
            "class_name": "RingAction",
            "description": [
                "Target all blocks in a ring"
            ],
            "examples": [],
            "importance": 30,
            "name": "Ring",
            "parameters": {
                "axis": "",
                "brush_axis": "",
                "center_probability": "",
                "center_x": "",
                "center_y": "",
                "center_z": "",
                "check_chunk": "Whether or not to check the target chunk before modifying blocks",
                "orient": "",
                "orient_pitch": "",
                "orient_pitch_snap": "",
                "orient_snap": "",
                "outer_probability": "",
                "probability": "",
                "radius": "The radius of this sphere or circle, in blocks",
                "radius_padding": "",
                "reorient": "",
                "replace": "",
                "thickness": "",
                "use_brush_size": "",
                "volume_type": "",
                "x_size": "Size along the x axis",
                "y_size": "Size along the y axis",
                "z_size": "Size along the z axis"
            },
            "short_class": "Ring"
        },
        "selector": {
            "category": "player",
            "class_name": "SelectorAction",
            "description": [
                "Show the caster a customizeable GUI",
                "This gui can be used to sell items, or cast spells",
                "This is similar to ItemShop but more customizeable, allowing for requirements for each item, different costs or a mix of items and spells.",
                "See: <link url=\"https:\/\/github.com\/elBukkit\/MagicPlugin\/wiki\/Selector\" text=\"the Selector wiki section\"> for more info!"
            ],
            "examples": [
                "appearanceshop",
                "colorshop",
                "effectshop",
                "progressmenu",
                "wandbuffs"
            ],
            "importance": 70,
            "name": "Selector",
            "parameters": {
                "add_options": "",
                "allow_attribute_reduction": "",
                "allow_dropped_items": "",
                "apply_lore_to_item": "If set, the lore of the option will also be applied to the item obtained",
                "apply_name_to_icon": "",
                "apply_name_to_item": "If set, the display name of the option will also be applied to the item obtained",
                "apply_to": "",
                "apply_to_caster": "",
                "apply_to_class": "",
                "apply_to_wand": "Whether the purchased item should apply directly to the player's wand",
                "attribute": "",
                "attribute_amount": "",
                "auto_close": "",
                "cast_for_tags": "",
                "cast_spell": "A spell this wand will cast at regular intervals while held\\nIf set to passive, the wand will only cast if worn as armor",
                "cast_spell_parameters": "",
                "chest_location": "",
                "command": "The command to execute\\nThe following variables can be used in this command:\\n<li>@spell : The name of the spell\\n<li>@p : The name of the caster. Can also use @pn\\n<li>@pd : The display name (nick) of the caster\\n<li>@uuid : The UUID of the caster\\n<li>@world, @x, @y, @z : The location of the caster\\n<li>@t : The name of the target. Can also use @tn\\n<li>@td : The display name (nick) of the target\\n<li>@tuuid : The UUID of the target\\n<li>@tworld, @tx, @ty, @tz : The location of the target",
                "command_source": "",
                "commands": "A list of commands to execute\\nThe following variables can be used in these command:\\n<li>@spell : The name of the spell\\n<li>@p : The name of the caster. Can also use @pn\\n<li>@pd : The display name (nick) of the caster\\n<li>@uuid : The UUID of the caster\\n<li>@world, @x, @y, @z : The location of the caster\\n<li>@t : The name of the target. Can also use @tn\\n<li>@td : The display name (nick) of the target\\n<li>@tuuid : The UUID of the target\\n<li>@tworld, @tx, @ty, @tz : The location of the target",
                "confirm": "",
                "confirm_filler": "",
                "confirm_title": "",
                "confirm_title_key": "",
                "cost": "",
                "cost_modifiers": "",
                "cost_override": "Can be used to change all item costs to a specific currency",
                "cost_type": "The type of costs options in this selector use, if none is specified on the option itself",
                "cost_type_fallback": "",
                "cost_type_fallbacks": "",
                "costs": "The costs for casting this spell",
                "currency": "",
                "earn": "",
                "earn_modifiers": "",
                "earn_scale": "",
                "earn_type": "",
                "earns": "",
                "effects": "Which effects to play",
                "experience": "",
                "free": "",
                "icon": "An icon that represents a spell or wand\\nThese can be vanilla items, or custom items from a resource pack",
                "icon_disabled": "An icon used when a spell is not available, due to permissions, cooldown, or insufficient resources",
                "icon_hide_flags": "",
                "icon_unbreakable": "",
                "item": "The item to use or show",
                "items": "The items to display",
                "kit": "",
                "limit": "",
                "lock_class": "",
                "lock_classes": "",
                "options": "The options that will be shown in the selector GUI",
                "owner_uuid": "",
                "placeholder_icon": "",
                "put_in_hand": "",
                "remove_lore": "",
                "requirement": "",
                "requirements": "",
                "scale": "Can be used to scale all costs for a shop up and down",
                "selected": "A message to show to the player after selecting an option",
                "selected_free": "A message to use when selecting a free option",
                "sell": "True to make this a sell shop, where players earn money by selling items",
                "show_free": "",
                "show_unavailable": "",
                "sp": "",
                "switch_class": "A class to switch to, locking the currently active class",
                "title": "",
                "title_key": "",
                "unlock": "",
                "unlock_class": "",
                "unlock_confirm_title": "",
                "unlock_confirm_title_key": "",
                "unlock_earns": "",
                "unlock_section": "",
                "warp": ""
            },
            "short_class": "Selector"
        },
        "serial": {
            "category": "compound",
            "class_name": "SerialAction",
            "description": [
                "Group a set of actions together and run them in serial",
                "This is mainly useful inside of actions like Random or Parallel, to group a set of actions together as a single option for the parent action."
            ],
            "examples": [
                "magichat",
                "nuke"
            ],
            "importance": 20,
            "name": "Serial",
            "parameters": [],
            "short_class": "Serial"
        },
        "set_spawn": {
            "category": "",
            "class_name": "SetSpawnAction",
            "description": [
                "Set a player's bed spawn locations"
            ],
            "examples": [],
            "importance": 0,
            "name": "Set Spawn",
            "parameters": [],
            "short_class": "SetSpawn"
        },
        "shop": {
            "category": "compound",
            "class_name": "ShopAction",
            "description": [
                "A flexible shop GUI, based on Selector, for selling items, spells, wand or just about anything else.",
                "See: <link url=\"https:\/\/github.com\/elBukkit\/MagicPlugin\/wiki\/Shops\" text=\"the Shops wiki section\"> for more info!"
            ],
            "examples": [
                "bank",
                "bookshop",
                "itemshop",
                "magicitemshop",
                "tweakshop"
            ],
            "importance": 0,
            "name": "Shop",
            "parameters": {
                "add_options": "",
                "add_sell_shop": "",
                "allow_attribute_reduction": "",
                "allow_dropped_items": "",
                "apply_lore_to_item": "If set, the lore of the option will also be applied to the item obtained",
                "apply_name_to_icon": "",
                "apply_name_to_item": "If set, the display name of the option will also be applied to the item obtained",
                "apply_to": "",
                "apply_to_caster": "",
                "apply_to_class": "",
                "apply_to_wand": "Whether the purchased item should apply directly to the player's wand",
                "attribute": "",
                "attribute_amount": "",
                "auto_close": "",
                "cast_for_tags": "",
                "cast_spell": "A spell this wand will cast at regular intervals while held\\nIf set to passive, the wand will only cast if worn as armor",
                "cast_spell_parameters": "",
                "check_max_spells": "",
                "chest_location": "",
                "command": "The command to execute\\nThe following variables can be used in this command:\\n<li>@spell : The name of the spell\\n<li>@p : The name of the caster. Can also use @pn\\n<li>@pd : The display name (nick) of the caster\\n<li>@uuid : The UUID of the caster\\n<li>@world, @x, @y, @z : The location of the caster\\n<li>@t : The name of the target. Can also use @tn\\n<li>@td : The display name (nick) of the target\\n<li>@tuuid : The UUID of the target\\n<li>@tworld, @tx, @ty, @tz : The location of the target",
                "command_source": "",
                "commands": "A list of commands to execute\\nThe following variables can be used in these command:\\n<li>@spell : The name of the spell\\n<li>@p : The name of the caster. Can also use @pn\\n<li>@pd : The display name (nick) of the caster\\n<li>@uuid : The UUID of the caster\\n<li>@world, @x, @y, @z : The location of the caster\\n<li>@t : The name of the target. Can also use @tn\\n<li>@td : The display name (nick) of the target\\n<li>@tuuid : The UUID of the target\\n<li>@tworld, @tx, @ty, @tz : The location of the target",
                "confirm": "",
                "confirm_filler": "",
                "confirm_title": "",
                "confirm_title_key": "",
                "cost": "",
                "cost_modifiers": "",
                "cost_override": "Can be used to change all item costs to a specific currency",
                "cost_type": "The type of costs options in this selector use, if none is specified on the option itself",
                "cost_type_fallback": "",
                "cost_type_fallbacks": "",
                "costs": "",
                "earn": "",
                "earn_modifiers": "",
                "earn_scale": "",
                "earn_type": "",
                "earns": "",
                "effects": "Which effects to play",
                "free": "",
                "icon": "An icon that represents a spell or wand\\nThese can be vanilla items, or custom items from a resource pack",
                "icon_disabled": "An icon used when a spell is not available, due to permissions, cooldown, or insufficient resources",
                "icon_hide_flags": "",
                "icon_unbreakable": "",
                "item": "The item to use or show",
                "items": "The items to display",
                "kit": "",
                "limit": "",
                "lock_class": "",
                "lock_classes": "",
                "options": "The options that will be shown in the selector GUI",
                "owner_uuid": "",
                "placeholder_icon": "",
                "put_in_hand": "",
                "remove_lore": "",
                "requirement": "",
                "requirements": "",
                "scale": "Can be used to scale all costs for a shop up and down",
                "selected": "A message to show to the player after selecting an option",
                "selected_free": "A message to use when selecting a free option",
                "sell": "True to make this a sell shop, where players earn money by selling items",
                "show_extra_spells": "",
                "show_free": "",
                "show_missing_requirements": "",
                "show_no_permission": "",
                "show_path_spells": "",
                "show_required_spells": "",
                "show_unavailable": "",
                "show_uncastable": "",
                "spells": "",
                "switch_class": "A class to switch to, locking the currently active class",
                "title": "",
                "title_key": "",
                "unlock": "",
                "unlock_class": "",
                "unlock_confirm_title": "",
                "unlock_confirm_title_key": "",
                "unlock_earns": "",
                "unlock_section": "",
                "warp": ""
            },
            "short_class": "Shop"
        },
        "shrink_block": {
            "category": "construction",
            "class_name": "ShrinkBlockAction",
            "description": [
                "Remove a block and replace it with a skull item representation of the block",
                "Only works on a very limited set of blocks, the ones for which Mojang has provided MHF skins."
            ],
            "examples": [],
            "importance": 0,
            "name": "Shrink Block",
            "parameters": [],
            "short_class": "ShrinkBlock"
        },
        "shrink_entity": {
            "category": "entity",
            "class_name": "ShrinkEntityAction",
            "description": [
                "Change entities to baby entities",
                "can apply damage to entities and drop skulls for them when killed"
            ],
            "examples": [
                "shrink"
            ],
            "importance": 0,
            "name": "Shrink Entity",
            "parameters": {
                "cancel_on_kill_target": "",
                "critical_damage_multiplier": "",
                "critical_effects": "",
                "critical_probability": "",
                "damage": "How much damage to deal to the target",
                "damage_max_distance": "Set this to scale the amount of damage dealt linearly with the distance to the source\\nThis can be used with an AreaOfEffect to damage targets more the closer they were to the cast target\\nSet this to the maximum distance, at which the damage amount will drop off to zero",
                "damage_min_distance": "",
                "damage_multiplier": "A multiplier to apply to the damage done by this action\\nThis can be used with spell levels or headshot parameters, to make it easy to scale up damage while still being able to tweak the base damage value",
                "damage_source_location": "The location on the target entity to use when calculating distance-based damage",
                "damage_type": "The type of damage to apply to the target\\nNote that using any custom damage type other than 'magic' will result in the caster not showing up as the source of damage to the target\\nThis may be important if using quest, arena or other plugins that care about who does damage for the purposes of giving rewards.",
                "drop_skull": "",
                "elemental_damage": "The amount of damage to do to an Elemental from the Elementals plugin.",
                "entity_damage": "The amount of damage to apply to non-player targets",
                "invert_distance": "",
                "knockback_resistance": "",
                "magic_damage": "Determines whether or not to use \"magic\" (thrown potion) damage versus normal damage.\\nMagic damage ignores armor, and is the default for damaging spells- set this to false if you wish armor to protect from spell damage.",
                "magic_entity_damage": "This can be used to turn off magic damage specifically when targeting non-players.",
                "min_damage": "",
                "no_damage_ticks": "",
                "percentage": "",
                "player_damage": "",
                "set_last_damaged": "",
                "set_last_damaged_by": "",
                "skeletons": ""
            },
            "short_class": "ShrinkEntity"
        },
        "simulate": {
            "category": "construction",
            "class_name": "SimulateAction",
            "description": [
                "This action is not complete, do not use. It is intended to replace SimulateSpell",
                "Runs a simulation of <link url=\"https:\/\/en.wikipedia.org\/wiki\/Conway%27s_Game_of_Life\" text=\"Conway's game of life\">",
                "The simulation can have custom rules, and can be run in 2D or 3D"
            ],
            "examples": [],
            "importance": 0,
            "name": "Simulate",
            "parameters": [],
            "short_class": "Simulate"
        },
        "skill_selector": {
            "category": "player",
            "class_name": "SkillSelectorAction",
            "description": [
                "Show the skill selection GUI to the caster",
                "This is the same GUI that a player would get if using the \/mskills command"
            ],
            "examples": [
                "skills"
            ],
            "importance": 0,
            "name": "Skill Selector",
            "parameters": {
                "page": ""
            },
            "short_class": "SkillSelector"
        },
        "skip": {
            "category": "compound",
            "class_name": "SkipAction",
            "description": [
                "Runs its sub actions every N iterations, skipping them the rest of the time",
                "This is most often used to slow down a spell in chunks, by skipping a Delay sub-action",
                "This can be used for block animations to allow ModifyBlock to run N times per tick with a delay in between"
            ],
            "examples": [
                "earthquake",
                "lift",
                "nuke",
                "rainbow",
                "tendril",
                "walls"
            ],
            "importance": 90,
            "name": "Skip",
            "parameters": {
                "repeat_skip": "",
                "skip": "",
                "until": ""
            },
            "short_class": "Skip"
        },
        "spawn_entity": {
            "category": "entity",
            "class_name": "SpawnEntityAction",
            "description": [
                "Spawn a new entity in the world",
                "Can be used with a magic mob, a full custom mob config, a simple vanilla mob or a random probability table of mobs"
            ],
            "examples": [
                "familiar",
                "farm",
                "ghast",
                "horse",
                "magichat",
                "mob",
                "monster",
                "testdummy"
            ],
            "importance": 100,
            "name": "Spawn Entity",
            "parameters": {
                "aggro": "This will enable the thread table aggro behavior on an otherwise normal mob\\nThis makes the mob target the player that has done the most damage to to it, within track_range\\nMobs that cast spells or have other mage properties such as protection will automatically use aggro behavior.",
                "ai": "Whether or not this mob has 'AI'. A mob with AI turned off will not move or react, and also can not be pushed by velocity.",
                "allow_replacement": "",
                "amount": "The amount of an item",
                "angry": "",
                "aware": "",
                "baby": "Make this mob a baby mob",
                "boots": "",
                "boss_bar": "",
                "brain": "Vanilla AI behaviors",
                "can_pickup_items": "Whether or not the mob will be allowed to pick up items",
                "cancel_explosion": "",
                "cancel_interact": "",
                "cast": "A probability table of spells to cast\\nThis parameter is deprecated, it is better to use the triggers map",
                "cast_requires_item": "An item the mob must be holding in order to cast spells",
                "cast_requires_target": "If true, the mob will only cast spells if it has targeted an entity",
                "chestplate": "",
                "collidable": "",
                "color": "Can be used to color particles and firework effects",
                "combustible": "",
                "default_drops": "Whether this mob should drop default vanilla drops on death",
                "dialog": "A list of speech lines for an NPC to say to nearby players",
                "dialog_face_player": "If set, the NPC will face the player they speak to\\nFacing is not smooth, direction will only change each time they speak\\nIF there are multiple players being spoken to, the NPC will try to look roughly in the center of them",
                "dialog_interval": "How long to wait before speaking each line of dialog",
                "dialog_range": "How close a player must be before the NPC will start speaking to them",
                "direction": "The direction to search",
                "disguise": "A disguise to use\\nrequires the LibsDisguises plugin",
                "disguise_target": "What player to use when disguising\\nThis will copy the target player's skin",
                "docile": "Make this mob avoid targeting other mobs",
                "drop_xp": "Amount of experience a mob should drop on death",
                "drops": "",
                "drops_require_player_killer": "",
                "dy_offset": "",
                "entity_attributes": "Vanilla entity attributes to apply to the mob",
                "entity_parameters": "",
                "entity_types": "",
                "equip_on_respawn": "",
                "face_player": "",
                "force": "For upgrade items, this will force all properties in the upgrade template to apply to the target wand, even if they are a downgrade",
                "goals": "A list of pathfinder goals for this mob",
                "gravity": "Whether or not this entity is affected by gravity",
                "item": "The item this mob is holding in its main hand",
                "health": "Amount of health to heal",
                "helmet": "",
                "hidden": "This spell or wand template will not show up in lists\\nThis is generally used for templates not meant for player use",
                "interact_command_source": "",
                "interact_commands": "",
                "interact_costs": "",
                "interact_permission": "",
                "interact_requires_owner": "",
                "interact_spell": "A spell to cast when a player interacts with (right-clicks on) this mob",
                "interact_spell_parameters": "",
                "interact_spell_source": "",
                "interact_spell_target": "",
                "interval_requires_target": "The mob's interval triggers will not fire unless it has a target",
                "invisible": "",
                "invulnerable": "This wand will not take damage from any source, and can not be destroyed",
                "leash_range": "",
                "leggings": "",
                "lifetime": "The time, in milliseconds, that the entity\/projectile lasts for",
                "loot": "",
                "mage": "Specify properties to get applied to the Mage for this mob\\nThese can be the same sort of properties you would apply to a player class or wand",
                "max_health": "The maximum health this mob or player should have",
                "attributes": "Attributes to apply to mob\\nThese are Magic attributes as defined in attributes.yml. For vanilla entity attributes, use entity_attributes",
                "cast_interval": "How often, in milliseconds, to cast a spell.\\nThis parameter is deprecated, use 'interval' and triggers instead",
                "interval": "How often to cast spells tied to the interval trigger",
                "model": "",
                "modifiers": "",
                "mount": "",
                "mythic_mob": "",
                "mythic_mob_level": "",
                "name": "The display name of this wand or spell to show in-game\\nCan be added directly on the wand or spell config, but it is often better to put all language in the messages.yml file so it can be easily edited and translated.",
                "npc": "",
                "offhand": "",
                "on_block": "",
                "ownable": "",
                "owned": "",
                "owner": "",
                "parameterize_name": "",
                "permissions": "",
                "persist": "",
                "potion_effects": "A map of potion effects to apply to this entity",
                "prevent_dismount": "",
                "prevent_melee": "",
                "prevent_projectiles": "",
                "prevent_teleport": "",
                "protected": "If set, the holder of this wand will be completly invincible and untargetable by all spells\\nMagic.wand.use.protected permission to use",
                "protection": "Protection from specific damage types",
                "reason": "",
                "register_by_name": "",
                "relentless": "",
                "remove_mounts": "",
                "remove_when_far_away": "",
                "repeat_random": "",
                "set_source": "",
                "set_target": "Whether to set the entity or block as the target when spawned",
                "show_name": "Whether to show the entity's name",
                "silent": "The silent flag of the mob, to prevent it from making any sounds",
                "sitting": "",
                "spawn": "Actions performed immediately after spawning the entity or projectile",
                "speed": "",
                "split": "",
                "static": "",
                "stay": "",
                "strength": "Gives damage bonuses to specific damage types",
                "tags": "",
                "tamed": "Set to true to make this mob tamed",
                "targeting": "",
                "temporary": "",
                "track_radius": "How far away a player must get before this mob no longer chases it",
                "transformable": "",
                "triggers": "A map of triggers that will cause this mob to cast spells",
                "type": "The type of entity to spawn",
                "use_npc_name": "",
                "use_wand_name": "",
                "wait_for_death": "",
                "weakness": "Weakness to specific damage types",
                "xp": "Amount of experience contained in an experiene orb entity"
            },
            "short_class": "SpawnEntity"
        },
        "spell_progress": {
            "category": "player",
            "class_name": "SpellProgressAction",
            "description": [
                "Show the caster the spell progress GUI, which will show them spells they have that are upgradeable, and the requirements to upgrade them."
            ],
            "examples": [
                "upgrades"
            ],
            "importance": 0,
            "name": "Spell Progress",
            "parameters": [],
            "short_class": "SpellProgress"
        },
        "spell_shop": {
            "category": "player",
            "class_name": "SpellShopAction",
            "description": [
                "A spell-specific variant of ItemShop",
                "Can be used to spell a specific set of spells, cast spells on the buyer, or automatically show players the spells available to them at their current path.",
                "This is the main method of progression for players that is available via the enchantment table GUI"
            ],
            "examples": [],
            "importance": 0,
            "name": "Spell Shop",
            "parameters": {
                "allow_locked": "",
                "apply_to_caster": "",
                "apply_to_wand": "Whether the purchased item should apply directly to the player's wand",
                "auto_close": "",
                "auto_upgrade": "",
                "cast_spells": "",
                "confirm": "",
                "confirm_filler": "",
                "filter_bound": "",
                "path": "A progression path that a wand will follow\\nWhen enchanting or using the spellshop, a path will determine what spells are available to a player\\nPaths may upgrade to other paths in a progression, when a player learns all of the spells available on their current path they will progress to the next.",
                "path_end": "",
                "path_exact": "",
                "permission": "",
                "put_in_hand": "",
                "require_template": "",
                "require_wand": "",
                "scale": "Can be used to scale all costs for a shop up and down",
                "sell": "True to make this a sell shop, where players earn money by selling items",
                "show_active_icons": "",
                "show_extra_spells": "",
                "show_free": "",
                "show_path_spells": "",
                "show_required_spells": "",
                "show_upgrades": "",
                "spells": "",
                "upgrade_levels": "",
                "upgrade_requires_casts": "",
                "use_items": "",
                "use_sp": "",
                "use_xp": "",
                "worth_item": ""
            },
            "short_class": "SpellShop"
        },
        "sphere": {
            "category": "compound",
            "class_name": "SphereAction",
            "description": [
                "Target all blocks in a sphere"
            ],
            "examples": [
                "blob",
                "shell"
            ],
            "importance": 100,
            "name": "Sphere",
            "parameters": {
                "center_probability": "",
                "center_x": "",
                "center_y": "",
                "center_z": "",
                "check_chunk": "Whether or not to check the target chunk before modifying blocks",
                "orient": "",
                "orient_pitch": "",
                "orient_pitch_snap": "",
                "orient_snap": "",
                "outer_probability": "",
                "probability": "",
                "radius": "The radius of this sphere or circle, in blocks",
                "radius_padding": "",
                "reorient": "",
                "replace": "",
                "thickness": "",
                "use_brush_size": "",
                "volume_type": "",
                "x_size": "Size along the x axis",
                "y_size": "Size along the y axis",
                "z_size": "Size along the z axis"
            },
            "short_class": "Sphere"
        },
        "spread": {
            "category": "compound",
            "class_name": "SpreadAction",
            "description": [
                "Randomly modify the target location or source direction"
            ],
            "examples": [
                "cluster",
                "forest",
                "lightning",
                "pollinate",
                "volley"
            ],
            "importance": 70,
            "name": "Spread",
            "parameters": {
                "center_probability": "",
                "outer_probability": "",
                "pitch_max": "",
                "probability": "",
                "radius": "The radius of this sphere or circle, in blocks",
                "yaw_max": ""
            },
            "short_class": "Spread"
        },
        "stash_wand": {
            "category": "player",
            "class_name": "StashWandAction",
            "description": [
                "Temporarily remove the player's wand and return it on undo"
            ],
            "examples": [],
            "importance": 0,
            "name": "Stash Wand",
            "parameters": {
                "return_on_finish": ""
            },
            "short_class": "StashWand"
        },
        "stop": {
            "category": "control",
            "class_name": "StopAction",
            "description": [
                "Stop running the spell and finish it immediately"
            ],
            "examples": [],
            "importance": 20,
            "name": "Stop",
            "parameters": [],
            "short_class": "Stop"
        },
        "stop_sound": {
            "category": "",
            "class_name": "StopSoundAction",
            "description": [
                "Stop a specific sound from playing",
                "Useful for ambient or long-running sounds such as music discs"
            ],
            "examples": [],
            "importance": 0,
            "name": "Stop Sound",
            "parameters": {
                "sound": "A sound effect to play. Can be a vanilla sound or a custom sound from a resource pack."
            },
            "short_class": "StopSound"
        },
        "super_protection": {
            "category": "player",
            "class_name": "SuperProtectionAction",
            "description": [
                "Apply super protection to a player, as if they were holding a wand with the 'protected' property",
                "A super protected player can't be damaged in any way or targeted by any spells"
            ],
            "examples": [],
            "importance": 0,
            "name": "Super Protection",
            "parameters": {
                "duration": "How long an effect or spell should last, in milliseconds"
            },
            "short_class": "SuperProtection"
        },
        "t_n_t": {
            "category": "compound",
            "class_name": "TNTAction",
            "description": [
                "Spawn a primed TNT entity",
                "Can run a set of actions when the TNT detonates"
            ],
            "examples": [
                "bomb",
                "cluster",
                "grenade"
            ],
            "importance": 60,
            "name": "TNT",
            "parameters": {
                "break_blocks": "",
                "count": "",
                "fire": "",
                "fuse": "",
                "hit_effects": "An effect key, specifying which effects to play when the projectile hits",
                "lifetime": "The time, in milliseconds, that the entity\/projectile lasts for",
                "projectile_effects": "An effect key, specifying effects to use to attach to the projectile",
                "projectile_effects_use_target": "Set to true to use the projectile location as the target location (instead of the source) for projectile effects",
                "set_target": "Whether to set the entity or block as the target when spawned",
                "size": "Size of the effect",
                "spawn": "Actions performed immediately after spawning the entity or projectile",
                "tick": "Actions performed on a every tick while a projectile is in flight",
                "tnt_velocity": "",
                "track_projectile": ""
            },
            "short_class": "TNT"
        },
        "take_costs": {
            "category": "compound",
            "class_name": "TakeCostsAction",
            "description": [
                "Remove some costs from the caster, failing if they do not have enough"
            ],
            "examples": [],
            "importance": 0,
            "name": "Take Costs",
            "parameters": {
                "costs": "",
                "fail": "Actions to run on fail instead of success",
                "invert": "Invert the text",
                "item": "The item to use or show",
                "item_cost": "",
                "timeout": ""
            },
            "short_class": "TakeCosts"
        },
        "take_item": {
            "category": "player",
            "class_name": "TakeItemAction",
            "description": [
                "Remove items from the player's inventory"
            ],
            "examples": [],
            "importance": 0,
            "name": "Take Item",
            "parameters": {
                "display_name": "A custom display name to use instead of the pre-formatted name",
                "full_stack": "",
                "give_to_caster": "Give the taken item to the caster",
                "item": "The item to use or show",
                "take_wand": ""
            },
            "short_class": "TakeItem"
        },
        "tame": {
            "category": "entity",
            "class_name": "TameAction",
            "description": [
                "Tame the target entity and set its owner as the caster"
            ],
            "examples": [
                "tame"
            ],
            "importance": 0,
            "name": "Tame",
            "parameters": {
                "own": "",
                "persist": ""
            },
            "short_class": "Tame"
        },
        "teleport": {
            "category": "entity",
            "class_name": "TeleportAction",
            "description": [
                "Teleport the caster to the target location"
            ],
            "examples": [
                "arrow_blink",
                "backflip",
                "blink",
                "evade",
                "randomtp"
            ],
            "importance": 80,
            "name": "Teleport",
            "parameters": {
                "allow_passthrough": "",
                "direct": "If set, will teleport directly to the target location without any modification or safety checks",
                "keep_velocity": "",
                "ledge_range": "",
                "maintain_direction": "",
                "passthrough_range": "",
                "prevent_fall": "",
                "require_build": "",
                "require_exit": "",
                "round_up": "",
                "safe": "",
                "same_block": "",
                "teleport_vehicle": "",
                "use_target_location": "",
                "vertical_range": ""
            },
            "short_class": "Teleport"
        },
        "teleport_n_p_c": {
            "category": "",
            "class_name": "TeleportNPCAction",
            "description": [
                "Move an NPC to the target location",
                "Requires an NPC id"
            ],
            "examples": [],
            "importance": 0,
            "name": "Teleport NPC",
            "parameters": {
                "npc_id": ""
            },
            "short_class": "TeleportNPC"
        },
        "throw_block": {
            "category": "compound",
            "class_name": "ThrowBlockAction",
            "description": [
                "Throw a falling block entity",
                "Can run a set of actions when the block lands"
            ],
            "examples": [
                "toss",
                "volley"
            ],
            "importance": 40,
            "name": "Throw Block",
            "parameters": {
                "consume": "",
                "consume_variants": "",
                "damage": "How much damage to deal to the target",
                "fall_damage": "",
                "hit_effects": "An effect key, specifying which effects to play when the projectile hits",
                "hurts": "Whether a falling block will damage entities it falls on",
                "lifetime": "The time, in milliseconds, that the entity\/projectile lasts for",
                "max_damage": "",
                "orient": "",
                "projectile_effects": "An effect key, specifying effects to use to attach to the projectile",
                "projectile_effects_use_target": "Set to true to use the projectile location as the target location (instead of the source) for projectile effects",
                "reorient": "",
                "set_target": "Whether to set the entity or block as the target when spawned",
                "source_location": "",
                "spawn": "Actions performed immediately after spawning the entity or projectile",
                "speed": "",
                "speed_max": "",
                "speed_min": "",
                "tick": "Actions performed on a every tick while a projectile is in flight",
                "track_projectile": "",
                "use_block_location": "",
                "use_cast_location": "",
                "use_eye_location": "",
                "use_hit_location": "",
                "use_target_location": "",
                "use_wand_location": ""
            },
            "short_class": "ThrowBlock"
        },
        "throw_item": {
            "category": "compound",
            "class_name": "ThrowItemAction",
            "description": [
                "Throw an item",
                "Can run a set of actions when the item despawns"
            ],
            "examples": [
                "pollinate"
            ],
            "importance": 20,
            "name": "Throw Item",
            "parameters": {
                "age_items": "",
                "hit_effects": "An effect key, specifying which effects to play when the projectile hits",
                "item": "The item to use or show",
                "lifetime": "The time, in milliseconds, that the entity\/projectile lasts for",
                "orient": "",
                "pickup_delay": "",
                "projectile_effects": "An effect key, specifying effects to use to attach to the projectile",
                "projectile_effects_use_target": "Set to true to use the projectile location as the target location (instead of the source) for projectile effects",
                "reorient": "",
                "set_target": "Whether to set the entity or block as the target when spawned",
                "source_location": "",
                "spawn": "Actions performed immediately after spawning the entity or projectile",
                "speed": "",
                "speed_max": "",
                "speed_min": "",
                "temporary": "",
                "throw_wand": "",
                "tick": "Actions performed on a every tick while a projectile is in flight",
                "track_projectile": "",
                "unbreakable": "Blocks created or modified by this spell will be unbreakable",
                "use_block_location": "",
                "use_cast_location": "",
                "use_eye_location": "",
                "use_hit_location": "",
                "use_target_location": "",
                "use_wand_location": ""
            },
            "short_class": "ThrowItem"
        },
        "tile_entities": {
            "category": "compound",
            "class_name": "TileEntitiesAction",
            "description": [
                "Target all loaded tile entities"
            ],
            "examples": [
                "count"
            ],
            "importance": 0,
            "name": "Tile Entities",
            "parameters": {
                "target_all_worlds": ""
            },
            "short_class": "TileEntities"
        },
        "time": {
            "category": "construction",
            "class_name": "TimeAction",
            "description": [
                "Change the time of the target world",
                "Can also change the phase of the moon"
            ],
            "examples": [
                "day",
                "night"
            ],
            "importance": 20,
            "name": "Time",
            "parameters": {
                "cycle_moon_phase": "",
                "time": ""
            },
            "short_class": "Time"
        },
        "torch": {
            "category": "construction",
            "class_name": "TorchAction",
            "description": [
                "Attach a torch to the target block"
            ],
            "examples": [
                "supertorch",
                "torch"
            ],
            "importance": 10,
            "name": "Torch",
            "parameters": {
                "allow_glowstone": "",
                "allow_sea_lantern": "If true, sea lanterns will be used when casting underwater",
                "glowstone_torch": "",
                "not_attachable": "",
                "redstone_torch": ""
            },
            "short_class": "Torch"
        },
        "tree": {
            "category": "construction",
            "class_name": "TreeAction",
            "description": [
                "Grow a tree at the target location",
                "This uses the vanilla tree generation algorithm and is not undoable",
                "Can be made to choose the type of tree based on the biome of the target block"
            ],
            "examples": [
                "forest",
                "tree"
            ],
            "importance": 10,
            "name": "Tree",
            "parameters": {
                "biomes": "",
                "require_sapling": "",
                "type": "The type of entity to spawn"
            },
            "short_class": "Tree"
        },
        "trigger": {
            "category": "",
            "class_name": "TriggerAction",
            "description": [
                "Send a specific trigger to the target mob or player",
                "Can be used to direct mob behavior from spells"
            ],
            "examples": [],
            "importance": 0,
            "name": "Trigger",
            "parameters": {
                "trigger": "The trigger to trigger on the target mob"
            },
            "short_class": "Trigger"
        },
        "undo": {
            "category": "control",
            "class_name": "UndoAction",
            "description": [
                "Undoes spells",
                "Can undo the last spell cast by the caster, the last spell cast by the target, or the last spell to have affected the target block.",
                "May require that the spell was cast recently or was cast by the caster of the undoing spell.",
                "Can also be used to undo changes performed in the current spell, including only undoing a limit set of changes in FIFO order. This can be used to create complex animations within a single spell."
            ],
            "examples": [
                "counterspell",
                "rollback",
                "stream"
            ],
            "importance": 20,
            "name": "Undo",
            "parameters": {
                "admin_permission": "",
                "cancel": "Current spells in progress will be cancelled before undoing",
                "sort": "",
                "target_block_timeout": "",
                "target_blocks": "",
                "target_caster": "",
                "target_down": "",
                "target_other_blocks": "",
                "target_spell": "",
                "target_timeout": "",
                "undo_oldest": "If set, only the onldest N changes will be undone\\nThis can be used to create undo animations where blocks build while the tail end is undone",
                "undo_to": "If set, will trigger undo until the queue is has only N changes remaining\\nThis can be used to create animations, such as in the Straem spell, where only the most recent few block changes are shown, and the rest are undone as the spell goes along."
            },
            "short_class": "Undo"
        },
        "update_parameters": {
            "category": "compound",
            "class_name": "UpdateParametersAction",
            "description": [
                "Cause all actions to re-read their parameters",
                "Useful for equation-driven parameters that may update in the middle of a spell cast"
            ],
            "examples": [],
            "importance": 0,
            "name": "Update Parameters",
            "parameters": [],
            "short_class": "UpdateParameters"
        },
        "upgrade_path": {
            "category": "player",
            "class_name": "UpgradePathAction",
            "description": [
                "Check the current path for upgrades or process property upgrades by some number of levels"
            ],
            "examples": [
                "spellshop"
            ],
            "importance": 0,
            "name": "Upgrade Path",
            "parameters": {
                "upgrade_levels": ""
            },
            "short_class": "UpgradePath"
        },
        "vanish": {
            "category": "player",
            "class_name": "VanishAction",
            "description": [
                "Vanish the target player, making them completely invisible to other players"
            ],
            "examples": [],
            "importance": 0,
            "name": "Vanish",
            "parameters": {
                "vanish": ""
            },
            "short_class": "Vanish"
        },
        "velocity": {
            "category": "entity",
            "class_name": "VelocityAction",
            "description": [
                "Apply velocity to the target entity",
                "Can be used to push or pull the entity away or towards the caster",
                "Can modify the velicity applied based on the target's distance from the ground, for a spell that applies a higher speed when up in the air"
            ],
            "examples": [
                "fling",
                "grab",
                "pull",
                "push",
                "tornado"
            ],
            "importance": 100,
            "name": "Velocity",
            "parameters": {
                "additive": "",
                "damaged": "",
                "direction": "The direction to search",
                "exemption_duration": "",
                "invert_distance": "",
                "item_speed": "Velocity to apply to dropped items\\nThis generally nees to be set lower than velocity applied to living entities, or items will get thrown around too far",
                "living_entity_speed": "",
                "max_altitude": "",
                "max_magnitude": "",
                "max_speed": "",
                "min_speed": "",
                "push": "",
                "speed": "",
                "velocity_max_distance": "",
                "y_offset": "Offset the y component of the location"
            },
            "short_class": "Velocity"
        },
        "volume": {
            "category": "compound",
            "class_name": "VolumeAction",
            "description": [
                "Target all blocks within a cuboid volume"
            ],
            "examples": [
                "bubble",
                "rainbow",
                "tendril",
                "tornado",
                "wave"
            ],
            "importance": 50,
            "name": "Volume",
            "parameters": {
                "center_probability": "",
                "center_x": "",
                "center_y": "",
                "center_z": "",
                "check_chunk": "Whether or not to check the target chunk before modifying blocks",
                "orient": "",
                "orient_pitch": "",
                "orient_pitch_snap": "",
                "orient_snap": "",
                "outer_probability": "",
                "probability": "",
                "radius": "The radius of this sphere or circle, in blocks",
                "radius_padding": "",
                "reorient": "",
                "replace": "",
                "thickness": "",
                "use_brush_size": "",
                "volume_type": "",
                "x_size": "Size along the x axis",
                "y_size": "Size along the y axis",
                "z_size": "Size along the z axis"
            },
            "short_class": "Volume"
        },
        "wand_instructions": {
            "category": "",
            "class_name": "WandInstructionsAction",
            "description": [
                "Show wand instructions to the target player for the wand they are holding"
            ],
            "examples": [],
            "importance": 0,
            "name": "Wand Instructions",
            "parameters": {
                "message_target": "Whether or not the message will be sent to the target.\\nIf false, the message will be sent to the caster."
            },
            "short_class": "WandInstructions"
        },
        "warp": {
            "category": "",
            "class_name": "WarpAction",
            "description": [
                "Teleport the target player to a specific warp location"
            ],
            "examples": [],
            "importance": 0,
            "name": "Warp",
            "parameters": {
                "keep_velocity": "",
                "maintain_direction": "",
                "prevent_fall": "",
                "require_build": "",
                "require_exit": "",
                "safe": "",
                "teleport_vehicle": "",
                "vertical_range": "",
                "warp": ""
            },
            "short_class": "Warp"
        },
        "wear": {
            "category": "entity",
            "class_name": "WearAction",
            "description": [
                "Force the target to wear a specific block or item on their head",
                "Can also be used to force the caster to wear the target block"
            ],
            "examples": [],
            "importance": 0,
            "name": "Wear",
            "parameters": {
                "armor_slot": "",
                "enchantments": "Enchantments to apply to this item",
                "item": "The item to use or show",
                "material": "The material to use",
                "replace_item": "",
                "return_on_finish": "",
                "slot": "",
                "temporary": "",
                "unbreakable": "Blocks created or modified by this spell will be unbreakable",
                "use_item": ""
            },
            "short_class": "Wear"
        },
        "weather": {
            "category": "construction",
            "class_name": "WeatherAction",
            "description": [
                "Change the weather in the target world"
            ],
            "examples": [
                "day",
                "night",
                "weather"
            ],
            "importance": 10,
            "name": "Weather",
            "parameters": {
                "player_weather": "",
                "weather": ""
            },
            "short_class": "Weather"
        },
        "while": {
            "category": "compound",
            "class_name": "WhileAction",
            "description": [
                "Repeat a set of actions as long as certain requirements are met"
            ],
            "examples": [],
            "importance": 0,
            "name": "While",
            "parameters": {
                "interval": "How often to update the projectile location",
                "requirement": "",
                "requirements": ""
            },
            "short_class": "While"
        }
    },
    "effectlib_effects": {
        "animated_ball": {
            "category": "",
            "class_name": "AnimatedBallEffect",
            "description": [
                "An animated swirl that follows the shape of a sphere"
            ],
            "examples": [],
            "importance": 90,
            "name": "Animated Ball",
            "parameters": {
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "particles_per_iteration": "The amount of particles, displayed in one iteration",
                "size": "Size of the effect",
                "x_factor": "Stretch\/Compress factor along the x axis",
                "x_offset": "Offset the x component of the location",
                "x_rotation": "Rotation across the x axis",
                "y_factor": "Stretch\/Compress factor along the y axis",
                "y_offset": "Offset the y component of the location",
                "y_rotation": "Rotation across the y axis",
                "z_factor": "Stretch\/Compress factor along the z axis",
                "z_offset": "Offset the z component of the location",
                "z_rotation": "Rotation across the z axis"
            },
            "short_class": "AnimatedBall"
        },
        "arc": {
            "category": "",
            "class_name": "ArcEffect",
            "description": [
                "An arc that extends from the source location to the target location"
            ],
            "examples": [],
            "importance": 70,
            "name": "Arc",
            "parameters": {
                "type": "The type of effect",
                "height": "Height of an effect",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect"
            },
            "short_class": "Arc"
        },
        "atom": {
            "category": "",
            "class_name": "AtomEffect",
            "description": [
                "A model of an atom with a nuclues and one or more orbitals"
            ],
            "examples": [],
            "importance": 70,
            "name": "Atom",
            "parameters": {
                "angular_velocity": "Angular velocity of the effect",
                "color_nucleus": "The color used for the particles in the nucleus of the effect",
                "color_orbital": "The color used for the particles in the orbital of the effect",
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "orbitals": "Number of orbitals around the nucleus",
                "orient": "",
                "particle_nucleus": "The particle to use in the nucleus of this effect",
                "particle_orbital": "The particle to use in the orbital of this effect",
                "particles_nucleus": "Number of particles to be spawned in the nucleus per iteration",
                "particles_orbital": "Number of particles to be spawned in the orbital per iteration",
                "period": "How long to wait, in ticks, between each iteration",
                "radius": "The radius of this sphere or circle, in blocks",
                "radius_nucleus": "Radius of the nucleus as a fraction of the atom-radius",
                "rotation": "Rotation around the Y-axis"
            },
            "short_class": "Atom"
        },
        "big_bang": {
            "category": "",
            "class_name": "BigBangEffect",
            "description": [
                "A big explosion with loud sounds"
            ],
            "examples": [],
            "importance": 0,
            "name": "Big Bang",
            "parameters": {
                "asynchronous": "Whether this effect should run in a separate thread\\nRunning in a separate thread is better for performance, but can not be used with any effects that do something other than show particle effects\\nEach effect sets this flag accordingly and generally you should not change it",
                "color": "Can be used to color particles and firework effects",
                "color2": "A secondary color for an effect\\nThis is used in firework effects as the secondary color",
                "color3": "A tertiary color for an effect",
                "type": "The type of effect",
                "explosions": "Number of explosions per iteration",
                "fade_color": "",
                "firework_type": "",
                "intensity": "",
                "iterations": "Number of times to repeat the effect",
                "period": "How long to wait, in ticks, between each iteration",
                "radius": "The radius of this sphere or circle, in blocks",
                "sound": "A sound effect to play. Can be a vanilla sound or a custom sound from a resource pack.",
                "sound_interval": "",
                "sound_pitch": "The pitch of a sound effect.\\nValues greater than 1 will increase pitch, values less than 1 will lower pitch.",
                "sound_volume": ""
            },
            "short_class": "BigBang"
        },
        "bleed": {
            "category": "",
            "class_name": "BleedEffect",
            "description": [
                "Make it look like a player is bleeding, an optionally apply the hurt effect"
            ],
            "examples": [],
            "importance": 0,
            "name": "Bleed",
            "parameters": {
                "type": "The type of effect",
                "height": "Height of an effect",
                "hurt": "Whether to play the hurt effect on the target, which will shake a player and turn their screen red",
                "iterations": "Number of times to repeat the effect",
                "period": "How long to wait, in ticks, between each iteration"
            },
            "short_class": "Bleed"
        },
        "circle": {
            "category": "",
            "class_name": "CircleEffect",
            "description": [
                "A 2D circle"
            ],
            "examples": [],
            "importance": 50,
            "name": "Circle",
            "parameters": {
                "angular_velocity_x": "Turns the effect by this angle each iteration around the x-axis",
                "angular_velocity_y": "Turns the effect by this angle each iteration around the y-axis",
                "angular_velocity_z": "Turns the effect by this angle each iteration around the z-axis",
                "type": "The type of effect",
                "enable_rotation": "",
                "iterations": "Number of times to repeat the effect",
                "max_angle": "",
                "orient": "",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "period": "How long to wait, in ticks, between each iteration",
                "radius": "The radius of this sphere or circle, in blocks",
                "reset_circle": "",
                "whole_circle": "",
                "x_rotation": "Rotation across the x axis",
                "x_subtract": "Subtract from the x component of the location",
                "y_rotation": "Rotation across the y axis",
                "y_subtract": "Subtract from the y component of the location",
                "z_rotation": "Rotation across the z axis",
                "z_subtract": "Subtract from the z component of the location"
            },
            "short_class": "Circle"
        },
        "cloud": {
            "category": "",
            "class_name": "CloudEffect",
            "description": [
                "A puffy cloud"
            ],
            "examples": [],
            "importance": 30,
            "name": "Cloud",
            "parameters": {
                "cloud_color": "",
                "cloud_particle": "",
                "cloud_particles": "",
                "cloud_size": "",
                "cloud_speed": "",
                "type": "The type of effect",
                "increase_height": "",
                "iterations": "Number of times to repeat the effect",
                "main_particle": "",
                "main_particles": "",
                "particle_radius": "Radius of the rain\/snow",
                "period": "How long to wait, in ticks, between each iteration",
                "y_offset": "Offset the y component of the location"
            },
            "short_class": "Cloud"
        },
        "colored_image": {
            "category": "",
            "class_name": "ColoredImageEffect",
            "description": [
                "Draw an image or animated gif using redstone or other colored particles"
            ],
            "examples": [],
            "importance": 80,
            "name": "Colored Image",
            "parameters": {
                "angular_velocity_x": "Turns the effect by this angle each iteration around the x-axis",
                "angular_velocity_y": "Turns the effect by this angle each iteration around the y-axis",
                "angular_velocity_z": "Turns the effect by this angle each iteration around the z-axis",
                "type": "The type of effect",
                "enable_rotation": "",
                "file_name": "",
                "frame_delay": "",
                "iterations": "Number of times to repeat the effect",
                "orient": "",
                "orient_pitch": "",
                "particle": "The type of particle to use in this effect",
                "period": "How long to wait, in ticks, between each iteration",
                "plane": "",
                "rotation": "Apply a fixed rotation to the image\\nThis is a vector in degrees",
                "size": "Size of the effect",
                "step_x": "Each stepX pixel will be shown. Saves packets for lower fontsizes.",
                "step_y": "Each stepY pixel will be shown. Saves packets for lower fontsizes.",
                "transparency": ""
            },
            "short_class": "ColoredImage"
        },
        "cone": {
            "category": "",
            "class_name": "ConeEffect",
            "description": [
                "A swirly cone extending out from the source location"
            ],
            "examples": [],
            "importance": 100,
            "name": "Cone",
            "parameters": {
                "angular_velocity": "Angular velocity of the effect",
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "length_grow": "",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "particles_cone": "",
                "radius_grow": "",
                "randomize": "",
                "rotation": "Rotation around the Y-axis"
            },
            "short_class": "Cone"
        },
        "cube": {
            "category": "",
            "class_name": "CubeEffect",
            "description": [
                "A wireframe cube"
            ],
            "examples": [],
            "importance": 90,
            "name": "Cube",
            "parameters": {
                "angular_velocity_x": "Turns the effect by this angle each iteration around the x-axis",
                "angular_velocity_y": "Turns the effect by this angle each iteration around the y-axis",
                "angular_velocity_z": "Turns the effect by this angle each iteration around the z-axis",
                "edge_length": "",
                "type": "The type of effect",
                "enable_rotation": "",
                "iterations": "Number of times to repeat the effect",
                "orient": "",
                "outline_only": "",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "period": "How long to wait, in ticks, between each iteration"
            },
            "short_class": "Cube"
        },
        "cuboid": {
            "category": "",
            "class_name": "CuboidEffect",
            "description": [
                "Create a wireframe cuboid"
            ],
            "examples": [],
            "importance": 0,
            "name": "Cuboid",
            "parameters": {
                "block_snap": "",
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "padding": "",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "period": "How long to wait, in ticks, between each iteration",
                "x_length": "",
                "y_length": "",
                "z_length": ""
            },
            "short_class": "Cuboid"
        },
        "cylinder": {
            "category": "",
            "class_name": "CylinderEffect",
            "description": [
                "A cylinder that may be hollow or solid"
            ],
            "examples": [],
            "importance": 80,
            "name": "Cylinder",
            "parameters": {
                "angular_velocity_x": "Turns the effect by this angle each iteration around the x-axis",
                "angular_velocity_y": "Turns the effect by this angle each iteration around the y-axis",
                "angular_velocity_z": "Turns the effect by this angle each iteration around the z-axis",
                "type": "The type of effect",
                "enable_rotation": "",
                "height": "Height of an effect",
                "iterations": "Number of times to repeat the effect",
                "orient": "",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "period": "How long to wait, in ticks, between each iteration",
                "radius": "The radius of this sphere or circle, in blocks",
                "rotation_x": "",
                "rotation_y": "",
                "rotation_z": "",
                "solid": ""
            },
            "short_class": "Cylinder"
        },
        "disco_ball": {
            "category": "",
            "class_name": "DiscoBallEffect",
            "description": [
                "A shiny disco ball in the sky"
            ],
            "examples": [],
            "importance": 0,
            "name": "Disco Ball",
            "parameters": {
                "direction": "Which direction the effect should play in",
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "line_color": "",
                "line_particle": "",
                "line_particles": "",
                "max": "",
                "max_lines": "",
                "period": "How long to wait, in ticks, between each iteration",
                "sphere_color": "",
                "sphere_particle": "",
                "sphere_particles": "",
                "sphere_radius": ""
            },
            "short_class": "DiscoBall"
        },
        "dna": {
            "category": "",
            "class_name": "DnaEffect",
            "description": [
                "Extends a strand of DNA with helixes rotating around a base"
            ],
            "examples": [],
            "importance": 50,
            "name": "Dna",
            "parameters": {
                "base_interval": "",
                "color_base1": "The color used for particles of the first base of the effect",
                "color_base2": "The color used for particles of the second base of the effect",
                "color_helix": "The color used for the particles in the helix of the effect",
                "type": "The type of effect",
                "grow": "",
                "iterations": "Number of times to repeat the effect",
                "length": "",
                "particle_base1": "The type of particle to use for the first base of this effect",
                "particle_base2": "The type of particle to use for the second base of this effect",
                "particle_helix": "The particle to use in the helix of this effect",
                "particles_base": "",
                "particles_helix": "Number of particles to be spawned in the helix per iteration",
                "radials": "",
                "radius": "The radius of this sphere or circle, in blocks"
            },
            "short_class": "Dna"
        },
        "donut": {
            "category": "",
            "class_name": "DonutEffect",
            "description": [
                "A torus shape"
            ],
            "examples": [],
            "importance": 70,
            "name": "Donut",
            "parameters": {
                "circles": "",
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "particles_circle": "",
                "period": "How long to wait, in ticks, between each iteration",
                "radius_donut": "",
                "radius_tube": "",
                "x_rotation": "Rotation across the x axis",
                "y_rotation": "Rotation across the y axis",
                "z_rotation": "Rotation across the z axis"
            },
            "short_class": "Donut"
        },
        "dragon": {
            "category": "",
            "class_name": "DragonEffect",
            "description": [
                "Strands of fire that shoot out in arcs"
            ],
            "examples": [],
            "importance": 50,
            "name": "Dragon",
            "parameters": {
                "arcs": "Arcs to build the breath",
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "length": "",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "period": "How long to wait, in ticks, between each iteration",
                "steps_per_iteration": "Number of steps to take per overall iteration"
            },
            "short_class": "Dragon"
        },
        "earth": {
            "category": "",
            "class_name": "EarthEffect",
            "description": [
                "A sphere that resembles the earth"
            ],
            "examples": [],
            "importance": 0,
            "name": "Earth",
            "parameters": {
                "color_land": "",
                "color_ocean": "",
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "mountain_height": "",
                "particle1": "",
                "particle2": "",
                "particle_land": "",
                "particle_ocean": "",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "particles_land": "",
                "particles_ocean": "",
                "period": "How long to wait, in ticks, between each iteration",
                "precision": "",
                "radius": "The radius of this sphere or circle, in blocks",
                "speed_land": "",
                "speed_ocean": ""
            },
            "short_class": "Earth"
        },
        "equation": {
            "category": "",
            "class_name": "EquationEffect",
            "description": [
                "Uses equations to render a particle each tick.",
                "Is capable of parametric equations, rendering multiple particles per tick.",
                "Equations use a 't' variable by default to represent the current tick, this variable starts at zero and counts up."
            ],
            "examples": [],
            "importance": 100,
            "name": "Equation",
            "parameters": {
                "cycle_mini_step": "",
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "max_steps": "",
                "orient": "",
                "orient_pitch": "",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "particles2": "The number of particles to spawn with each iteration of the inner effect",
                "variable": "",
                "variable2": "",
                "x2_equation": "The equation used to calculate the x location of the inner effect",
                "x_equation": "The equation used to calculate the x location of the effect",
                "y2_equation": "The equation used to calculate the y location of the inner effect",
                "y_equation": "The equation used to calculate the y location of the effect",
                "z2_equation": "The equation used to calculate the z location of the inner effect",
                "z_equation": "The equation used to calculate the z location of the effect"
            },
            "short_class": "Equation"
        },
        "explode": {
            "category": "",
            "class_name": "ExplodeEffect",
            "description": [
                "A large explosion"
            ],
            "examples": [],
            "importance": 30,
            "name": "Explode",
            "parameters": {
                "amount": "The amount of an item",
                "particle1": "",
                "particle2": "",
                "sound": "A sound effect to play. Can be a vanilla sound or a custom sound from a resource pack.",
                "speed": ""
            },
            "short_class": "Explode"
        },
        "flame": {
            "category": "",
            "class_name": "FlameEffect",
            "description": [
                "Make something look like it's on fire"
            ],
            "examples": [],
            "importance": 30,
            "name": "Flame",
            "parameters": {
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect"
            },
            "short_class": "Flame"
        },
        "fountain": {
            "category": "",
            "class_name": "FountainEffect",
            "description": [
                "A fountain of particles shooting up in the sky"
            ],
            "examples": [],
            "importance": 70,
            "name": "Fountain",
            "parameters": {
                "type": "The type of effect",
                "height": "Height of an effect",
                "height_spout": "",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "particles_spout": "",
                "particles_strand": "",
                "period": "How long to wait, in ticks, between each iteration",
                "radius": "The radius of this sphere or circle, in blocks",
                "radius_spout": "",
                "rotation": "Rotation around the Y-axis",
                "strands": ""
            },
            "short_class": "Fountain"
        },
        "grid": {
            "category": "",
            "class_name": "GridEffect",
            "description": [
                "Create a 2D wireframe grid"
            ],
            "examples": [],
            "importance": 50,
            "name": "Grid",
            "parameters": {
                "center": "",
                "columns": "Number of columns in the grid",
                "height_cell": "Height per cell in blocks",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "particles_height": "",
                "particles_width": "",
                "period": "How long to wait, in ticks, between each iteration",
                "rotation": "Rotation around the Y-axis",
                "rotation_x": "",
                "rotation_z": "",
                "rows": "",
                "width_cell": ""
            },
            "short_class": "Grid"
        },
        "heart": {
            "category": "",
            "class_name": "HeartEffect",
            "description": [
                "Creates a 2D heart in 3D space"
            ],
            "examples": [],
            "importance": 70,
            "name": "Heart",
            "parameters": {
                "compilation": "",
                "compress_y_factor_total": "Compresses the heart along the y axis",
                "factor_inner_spike": "Defines the size of the that inner sting  \\\/",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "x_factor": "Stretch\/Compress factor along the x axis",
                "x_rotation": "Rotation across the x axis",
                "y_factor": "Stretch\/Compress factor along the y axis",
                "y_rotation": "Rotation across the y axis",
                "z_rotation": "Rotation across the z axis"
            },
            "short_class": "Heart"
        },
        "helix": {
            "category": "",
            "class_name": "HelixEffect",
            "description": [
                "A flat spiralling helix"
            ],
            "examples": [],
            "importance": 90,
            "name": "Helix",
            "parameters": {
                "angular_velocity_x": "Turns the effect by this angle each iteration around the x-axis",
                "angular_velocity_y": "Turns the effect by this angle each iteration around the y-axis",
                "angular_velocity_z": "Turns the effect by this angle each iteration around the z-axis",
                "curve": "",
                "type": "The type of effect",
                "enable_rotation": "",
                "iterations": "Number of times to repeat the effect",
                "orient": "",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "period": "How long to wait, in ticks, between each iteration",
                "radius": "The radius of this sphere or circle, in blocks",
                "rotation": "Rotation around the Y-axis",
                "strands": "",
                "x_rotation": "Rotation across the x axis",
                "y_rotation": "Rotation across the y axis",
                "z_rotation": "Rotation across the z axis"
            },
            "short_class": "Helix"
        },
        "hill": {
            "category": "",
            "class_name": "HillEffect",
            "description": [
                "Waving hills"
            ],
            "examples": [],
            "importance": 20,
            "name": "Hill",
            "parameters": {
                "edge_length": "",
                "type": "The type of effect",
                "height": "Height of an effect",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "period": "How long to wait, in ticks, between each iteration",
                "y_rotation": "Rotation across the y axis"
            },
            "short_class": "Hill"
        },
        "icon": {
            "category": "",
            "class_name": "IconEffect",
            "description": [
                "A single particle appears above the target"
            ],
            "examples": [],
            "importance": 100,
            "name": "Icon",
            "parameters": {
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "period": "How long to wait, in ticks, between each iteration",
                "y_offset": "Offset the y component of the location"
            },
            "short_class": "Icon"
        },
        "image": {
            "category": "",
            "class_name": "ImageEffect",
            "description": [
                "Render a monochrome image from an image file or animated gif.",
                "Black pixels will be skipped, all other pixels display as the selected particle type"
            ],
            "examples": [],
            "importance": 80,
            "name": "Image",
            "parameters": {
                "angular_velocity_x": "Turns the effect by this angle each iteration around the x-axis",
                "angular_velocity_y": "Turns the effect by this angle each iteration around the y-axis",
                "angular_velocity_z": "Turns the effect by this angle each iteration around the z-axis",
                "type": "The type of effect",
                "enable_rotation": "",
                "file_name": "",
                "frame_delay": "",
                "invert": "Invert the text",
                "iterations": "Number of times to repeat the effect",
                "orient": "",
                "orient_pitch": "",
                "particle": "The type of particle to use in this effect",
                "period": "How long to wait, in ticks, between each iteration",
                "plane": "",
                "rotation": "Apply a fixed rotation to the image\\nThis is a vector in degrees",
                "size": "Size of the effect",
                "step_x": "Each stepX pixel will be shown. Saves packets for lower fontsizes.",
                "step_y": "Each stepY pixel will be shown. Saves packets for lower fontsizes.",
                "transparency": ""
            },
            "short_class": "Image"
        },
        "jump": {
            "category": "",
            "class_name": "JumpEffect",
            "description": [
                "Apply velocity to the target entity"
            ],
            "examples": [],
            "importance": 0,
            "name": "Jump",
            "parameters": {
                "asynchronous": "Whether this effect should run in a separate thread\\nRunning in a separate thread is better for performance, but can not be used with any effects that do something other than show particle effects\\nEach effect sets this flag accordingly and generally you should not change it",
                "iterations": "Number of times to repeat the effect",
                "period": "How long to wait, in ticks, between each iteration",
                "power": ""
            },
            "short_class": "Jump"
        },
        "line": {
            "category": "",
            "class_name": "LineEffect",
            "description": [
                "Extend a line from the source to the target"
            ],
            "examples": [],
            "importance": 80,
            "name": "Line",
            "parameters": {
                "type": "The type of effect",
                "is_zig_zag": "Whether or not this line zig zags",
                "iterations": "Number of times to repeat the effect",
                "length": "",
                "max_length": "",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "sub_effect_at_end": "",
                "sub_effect_at_end_cached": "",
                "zig_zag_offset": "Direction of zig-zags",
                "zig_zag_relative_offset": "",
                "zig_zags": "Number of zig zags in the line"
            },
            "short_class": "Line"
        },
        "love": {
            "category": "",
            "class_name": "LoveEffect",
            "description": [
                "Make hearts bubble out of the target"
            ],
            "examples": [],
            "importance": 50,
            "name": "Love",
            "parameters": {
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "period": "How long to wait, in ticks, between each iteration"
            },
            "short_class": "Love"
        },
        "modified": {
            "category": "",
            "class_name": "ModifiedEffect",
            "description": [
                "Modify any other effect using equations",
                "Equations can be applied to any parameter of the contained effect.",
                "Equations can also be used to move the entire effect around."
            ],
            "examples": [
                "day"
            ],
            "importance": 100,
            "name": "Modified",
            "parameters": {
                "class": "What type of effect to play\\nMost often this can be left out, it defaults to EffectSingle which means to play the effect just once.",
                "type": "The type of effect",
                "effect": "An EffectLib effect to play\\nThis must contain at least a 'class' parameter to specify which EffectLib class to display",
                "iterations": "Number of times to repeat the effect",
                "orient": "",
                "orient_pitch": "",
                "parameters": "A map of spell parameters which determines how the spell behaves. Check out the Spell Parameters section above!",
                "variable_a": "",
                "variable_b": "",
                "x_equation": "The equation used to calculate the x location of the effect",
                "y_equation": "The equation used to calculate the y location of the effect",
                "z_equation": "The equation used to calculate the z location of the effect"
            },
            "short_class": "Modified"
        },
        "music": {
            "category": "",
            "class_name": "MusicEffect",
            "description": [
                "A ring of musical notes"
            ],
            "examples": [],
            "importance": 20,
            "name": "Music",
            "parameters": {
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "radials_per_step": "",
                "radius": "The radius of this sphere or circle, in blocks"
            },
            "short_class": "Music"
        },
        "particle": {
            "category": "",
            "class_name": "ParticleEffect",
            "description": [
                "Just play a single or repeating particle"
            ],
            "examples": [],
            "importance": 0,
            "name": "Particle",
            "parameters": {
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect"
            },
            "short_class": "Particle"
        },
        "plot": {
            "category": "",
            "class_name": "PlotEffect",
            "description": [
                "Create a simple graph of an equation using separate x and y equations.",
                "This is primarily intended for testing equations, and not really meant to be used for in-game effects"
            ],
            "examples": [],
            "importance": 0,
            "name": "Plot",
            "parameters": {
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "persistent": "",
                "x_equation": "The equation used to calculate the x location of the effect",
                "x_scale": "Scale along the x axis",
                "y_equation": "The equation used to calculate the y location of the effect",
                "y_scale": "Scale along the y axis",
                "z_equation": "The equation used to calculate the z location of the effect",
                "z_scale": "Scale along the z axis"
            },
            "short_class": "Plot"
        },
        "pyramid": {
            "category": "",
            "class_name": "PyramidEffect",
            "description": [
                "Create a pyramid out of particles"
            ],
            "examples": [],
            "importance": 0,
            "name": "Pyramid",
            "parameters": {
                "block_snap": "",
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "period": "How long to wait, in ticks, between each iteration",
                "radius": "The radius of this sphere or circle, in blocks"
            },
            "short_class": "Pyramid"
        },
        "shield": {
            "category": "",
            "class_name": "ShieldEffect",
            "description": [
                "Create a dome around the target"
            ],
            "examples": [],
            "importance": 100,
            "name": "Shield",
            "parameters": {
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "radius": "The radius of this sphere or circle, in blocks",
                "reverse": "",
                "sphere": ""
            },
            "short_class": "Shield"
        },
        "sky_rocket": {
            "category": "",
            "class_name": "SkyRocketEffect",
            "description": [
                "Send the target entity flying into the sky"
            ],
            "examples": [],
            "importance": 0,
            "name": "Sky Rocket",
            "parameters": {
                "asynchronous": "Whether this effect should run in a separate thread\\nRunning in a separate thread is better for performance, but can not be used with any effects that do something other than show particle effects\\nEach effect sets this flag accordingly and generally you should not change it",
                "iterations": "Number of times to repeat the effect",
                "period": "How long to wait, in ticks, between each iteration",
                "power": ""
            },
            "short_class": "SkyRocket"
        },
        "smoke": {
            "category": "",
            "class_name": "SmokeEffect",
            "description": [
                "Make it appear as though the target is smoldering"
            ],
            "examples": [],
            "importance": 50,
            "name": "Smoke",
            "parameters": {
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect"
            },
            "short_class": "Smoke"
        },
        "sound": {
            "category": "",
            "class_name": "SoundEffect",
            "description": [
                "Play a sound"
            ],
            "examples": [],
            "importance": 0,
            "name": "Sound",
            "parameters": {
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "sound": "A sound effect to play. Can be a vanilla sound or a custom sound from a resource pack."
            },
            "short_class": "Sound"
        },
        "sphere": {
            "category": "",
            "class_name": "SphereEffect",
            "description": [
                "Create a 3D sphere"
            ],
            "examples": [],
            "importance": 100,
            "name": "Sphere",
            "parameters": {
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "particle_increase": "",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "radius": "The radius of this sphere or circle, in blocks",
                "radius_increase": "Amount to increase the radius per tick",
                "y_offset": "Offset the y component of the location"
            },
            "short_class": "Sphere"
        },
        "square": {
            "category": "",
            "class_name": "SquareEffect",
            "description": [
                "Create a 2-D square out of particles"
            ],
            "examples": [],
            "importance": 0,
            "name": "Square",
            "parameters": {
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "particle_increase": "",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "radius": "The radius of this sphere or circle, in blocks",
                "radius_increase": "Amount to increase the radius per tick",
                "type": "The type of entity to spawn",
                "y_offset": "Offset the y component of the location"
            },
            "short_class": "Square"
        },
        "star": {
            "category": "",
            "class_name": "StarEffect",
            "description": [
                "Create a 2D star"
            ],
            "examples": [],
            "importance": 80,
            "name": "Star",
            "parameters": {
                "type": "The type of effect",
                "inner_radius": "",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "period": "How long to wait, in ticks, between each iteration",
                "spike_height": "",
                "spikes_half": ""
            },
            "short_class": "Star"
        },
        "text": {
            "category": "",
            "class_name": "TextEffect",
            "description": [
                "Render text in the air using particles"
            ],
            "examples": [],
            "importance": 90,
            "name": "Text",
            "parameters": {
                "type": "The type of effect",
                "font": "",
                "size": "Can be used to scale the text size down",
                "invert": "Invert the text",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "period": "How long to wait, in ticks, between each iteration",
                "realtime": "",
                "step_x": "Each stepX pixel will be shown. Saves packets for lower fontsizes.",
                "step_y": "Each stepY pixel will be shown. Saves packets for lower fontsizes.",
                "text": ""
            },
            "short_class": "Text"
        },
        "tornado": {
            "category": "",
            "class_name": "TornadoEffect",
            "description": [
                "A swirling tornado of particles"
            ],
            "examples": [],
            "importance": 70,
            "name": "Tornado",
            "parameters": {
                "circle_height": "",
                "circle_particles": "",
                "cloud_color": "",
                "cloud_particle": "",
                "cloud_particles": "",
                "cloud_size": "",
                "cloud_speed": "",
                "distance": "How far to travel before moving on to the next step",
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "max_tornado_radius": "",
                "period": "How long to wait, in ticks, between each iteration",
                "show_cloud": "",
                "show_tornado": "",
                "tornado_color": "",
                "tornado_height": "",
                "tornado_particle": "",
                "y_offset": "Offset the y component of the location"
            },
            "short_class": "Tornado"
        },
        "trace": {
            "category": "",
            "class_name": "TraceEffect",
            "description": [
                "Trail particles behind the target entity"
            ],
            "examples": [],
            "importance": 100,
            "name": "Trace",
            "parameters": {
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "max_way_points": "Maximum amount of way points",
                "particle": "The type of particle to use in this effect",
                "refresh": "Iterations to wait before refreshing particles"
            },
            "short_class": "Trace"
        },
        "turn": {
            "category": "",
            "class_name": "TurnEffect",
            "description": [
                "Make the target entity change directions"
            ],
            "examples": [],
            "importance": 0,
            "name": "Turn",
            "parameters": {
                "asynchronous": "Whether this effect should run in a separate thread\\nRunning in a separate thread is better for performance, but can not be used with any effects that do something other than show particle effects\\nEach effect sets this flag accordingly and generally you should not change it",
                "type": "The type of effect",
                "iterations": "Number of times to repeat the effect",
                "step": "Angular movement per iteration"
            },
            "short_class": "Turn"
        },
        "vortex": {
            "category": "",
            "class_name": "VortexEffect",
            "description": [
                "Create a swirling vortex"
            ],
            "examples": [],
            "importance": 90,
            "name": "Vortex",
            "parameters": {
                "circles": "",
                "type": "The type of effect",
                "grow": "",
                "helixes": "",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "radials": "",
                "radius": "The radius of this sphere or circle, in blocks"
            },
            "short_class": "Vortex"
        },
        "warp": {
            "category": "",
            "class_name": "WarpEffect",
            "description": [
                "Rings that descend around the target, as if they had stepped on a teleporter pad"
            ],
            "examples": [],
            "importance": 100,
            "name": "Warp",
            "parameters": {
                "grow": "",
                "iterations": "Number of times to repeat the effect",
                "particle": "The type of particle to use in this effect",
                "particles": "The number of particles to spawn with each iteration of this effect",
                "period": "How long to wait, in ticks, between each iteration",
                "radius": "The radius of this sphere or circle, in blocks",
                "rings": "",
                "type": "The type of entity to spawn"
            },
            "short_class": "Warp"
        },
        "wave": {
            "category": "",
            "class_name": "WaveEffect",
            "description": [
                "Create a wavy horizontal plane"
            ],
            "examples": [],
            "importance": 70,
            "name": "Wave",
            "parameters": {
                "cloud_color": "",
                "cloud_particle": "",
                "depth_front": "",
                "type": "The type of effect",
                "height": "Height of an effect",
                "height_back": "Height of the parabola arc forming the back",
                "iterations": "Number of times to repeat the effect",
                "length_back": "",
                "length_front": "",
                "main_particle": "",
                "particle": "The type of particle to use in this effect",
                "particles_back": "",
                "particles_front": "",
                "period": "How long to wait, in ticks, between each iteration",
                "rows": "",
                "velocity": "",
                "width": ""
            },
            "short_class": "Wave"
        }
    }
}